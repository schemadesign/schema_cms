// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StateFilter: Component should render correctly 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="name"
  />
  <MobileMenu
    active="stateNavBtn"
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Set Filter"
        id="projectState.stateFilter.subTitle"
        values={Object {}}
      />
    }
    headerTitle="name"
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="project.view.projectsListPage"
            values={Object {}}
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersPageNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="project.view.usersPage"
            values={Object {}}
          />,
          "to": "/user/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectDetailsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project details"
            id="project.view.projectDetails"
            values={Object {}}
          />,
          "to": "/project/1",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "dataSourceNavBtn",
          "label": <FormattedMessage
            defaultMessage="Data Sources"
            id="project.view.projectDataSources"
            values={Object {}}
          />,
          "to": "/project/1/datasource",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "stateNavBtn",
          "label": <FormattedMessage
            defaultMessage="States"
            id="project.view.states"
            values={Object {}}
          />,
          "to": "/project/1/state",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project Users"
            id="project.view.projectUsersPage"
            values={Object {}}
          />,
          "to": "/project/1/user",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "folderNavBtn",
          "label": <FormattedMessage
            defaultMessage="Pages"
            id="project.view.projectPages"
            values={Object {}}
          />,
          "to": "/project/1/folder",
          "type": "link_item",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Set Filter"
        id="projectState.stateFilter.subTitle"
        values={Object {}}
      />
    }
    title="name"
  />
  <LoadingWrapper
    error={null}
    loading={true}
    noData={false}
    noDataContent={null}
  >
    <styled.form
      onSubmit={[Function]}
    >
      <TextInput
        checkOnlyErrors={false}
        disabled={true}
        errors={Object {}}
        fetchFieldsInfo={[Function]}
        fetchFilter={[Function]}
        fieldsInfo={Array []}
        filter={Object {}}
        fullWidth={true}
        handleChange={[Function]}
        handleSubmit={[Function]}
        history={
          Object {
            "goBack": [Function],
            "push": [Function],
          }
        }
        intl={
          Object {
            "formatMessage": [Function],
          }
        }
        isEdit={false}
        isSubmitting={false}
        isValid={true}
        label="Filter Name"
        match={
          Object {
            "params": Object {
              "filterId": "filterId",
            },
          }
        }
        name="name"
        onChange={[Function]}
        setFieldValue={[Function]}
        state={
          Object {
            "author": "author",
            "created": "10.12.2019",
            "description": "description",
            "isPublic": false,
            "name": "name",
            "project": 1,
          }
        }
        touched={Object {}}
        userRole="admin"
        values={
          Object {
            "values": Array [],
          }
        }
      />
      <TextInput
        checkOnlyErrors={false}
        disabled={true}
        errors={Object {}}
        fetchFieldsInfo={[Function]}
        fetchFilter={[Function]}
        fieldsInfo={Array []}
        filter={Object {}}
        fullWidth={true}
        handleChange={[Function]}
        handleSubmit={[Function]}
        history={
          Object {
            "goBack": [Function],
            "push": [Function],
          }
        }
        intl={
          Object {
            "formatMessage": [Function],
          }
        }
        isEdit={false}
        isSubmitting={false}
        isValid={true}
        label="Filter Type"
        match={
          Object {
            "params": Object {
              "filterId": "filterId",
            },
          }
        }
        name="filterType"
        onChange={[Function]}
        setFieldValue={[Function]}
        state={
          Object {
            "author": "author",
            "created": "10.12.2019",
            "description": "description",
            "isPublic": false,
            "name": "name",
            "project": 1,
          }
        }
        touched={Object {}}
        userRole="admin"
        values={
          Object {
            "values": Array [],
          }
        }
      />
      <TextInput
        checkOnlyErrors={false}
        disabled={true}
        errors={Object {}}
        fetchFieldsInfo={[Function]}
        fetchFilter={[Function]}
        fieldsInfo={Array []}
        filter={Object {}}
        fullWidth={true}
        handleChange={[Function]}
        handleSubmit={[Function]}
        history={
          Object {
            "goBack": [Function],
            "push": [Function],
          }
        }
        intl={
          Object {
            "formatMessage": [Function],
          }
        }
        isEdit={false}
        isSubmitting={false}
        isValid={true}
        label="Field"
        match={
          Object {
            "params": Object {
              "filterId": "filterId",
            },
          }
        }
        name="field"
        onChange={[Function]}
        setFieldValue={[Function]}
        state={
          Object {
            "author": "author",
            "created": "10.12.2019",
            "description": "description",
            "isPublic": false,
            "name": "name",
            "project": 1,
          }
        }
        touched={Object {}}
        userRole="admin"
        values={
          Object {
            "values": Array [],
          }
        }
      />
      <TextInput
        checkOnlyErrors={false}
        errors={Object {}}
        fetchFieldsInfo={[Function]}
        fetchFilter={[Function]}
        fieldsInfo={Array []}
        filter={Object {}}
        fullWidth={true}
        handleChange={[Function]}
        handleSubmit={[Function]}
        history={
          Object {
            "goBack": [Function],
            "push": [Function],
          }
        }
        intl={
          Object {
            "formatMessage": [Function],
          }
        }
        isEdit={true}
        isSubmitting={false}
        isValid={true}
        label="Value"
        match={
          Object {
            "params": Object {
              "filterId": "filterId",
            },
          }
        }
        name="values.0"
        onChange={[Function]}
        setFieldValue={[Function]}
        state={
          Object {
            "author": "author",
            "created": "10.12.2019",
            "description": "description",
            "isPublic": false,
            "name": "name",
            "project": 1,
          }
        }
        touched={Object {}}
        userRole="admin"
        values={
          Object {
            "values": Array [],
          }
        }
      />
      <NavigationContainer
        contentStyles={null}
        fixed={true}
        hideOnDesktop={false}
        right={false}
      >
        <BackButton
          disabled={false}
          onClick={[Function]}
          type="button"
        />
        <NextButton
          disabled={false}
          loading={false}
          type="submit"
        >
          <FormattedMessage
            defaultMessage="Save"
            id="projectState.stateFilter.save"
            values={Object {}}
          />
        </NextButton>
      </NavigationContainer>
    </styled.form>
  </LoadingWrapper>
</Fragment>
`;
