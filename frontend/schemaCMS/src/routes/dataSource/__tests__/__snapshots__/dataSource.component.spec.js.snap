// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSource: Component should render correctly 1`] = `
<Fragment>
  <ProjectTabs
    active="sources"
    url="/project/2"
  />
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <Switch>
      <Redirect
        exact={true}
        path="path"
        to="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(WithFormik(Source))",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(injectIntl(withRouter(WithTheme(WithFormik(Source)))))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(JobList)",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(withRouter(WithTheme(JobList)))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/job"
      />
      <Switch>
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(Fields)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/preview"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(DataWranglingScripts)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/steps"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(CreateFilter)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/filters/add"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(Filters)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/filters"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(DataWranglingResult)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/result"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(DataSourceTags)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/tag"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(WithFormik(CreateDataSourceTag))))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/tag/add"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(injectIntl(withRouter(NotFound)))",
              "type": [Function],
            }
          }
          exact={true}
          path="path/*"
        />
      </Switch>
    </Switch>
  </LoadingWrapper>
</Fragment>
`;

exports[`DataSource: Component should render without rest steps 1`] = `
<Fragment>
  <ProjectTabs
    active="sources"
    url="/project/2"
  />
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <Switch>
      <Redirect
        exact={true}
        path="path"
        to="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(WithFormik(Source))",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(injectIntl(withRouter(WithTheme(WithFormik(Source)))))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(JobList)",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(withRouter(WithTheme(JobList)))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/job"
      />
      <Redirect
        path="path"
        to="path/source"
      />
    </Switch>
  </LoadingWrapper>
</Fragment>
`;

exports[`DataSource: Component should render without routing 1`] = `
<Fragment>
  <ProjectTabs
    active="sources"
    url="/project/2"
  />
  <LoadingWrapper
    error={null}
    loading={true}
    noData={false}
    noDataContent={null}
  >
    <Switch>
      <Redirect
        exact={true}
        path="path"
        to="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(WithFormik(Source))",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(injectIntl(withRouter(WithTheme(WithFormik(Source)))))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/source"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(JobList)",
              "render": [Function],
            },
            "compare": null,
            "displayName": "Connect(withRouter(WithTheme(JobList)))",
            "type": [Function],
          }
        }
        exact={true}
        path="path/job"
      />
      <Redirect
        path="path"
        to="path/source"
      />
    </Switch>
  </LoadingWrapper>
</Fragment>
`;
