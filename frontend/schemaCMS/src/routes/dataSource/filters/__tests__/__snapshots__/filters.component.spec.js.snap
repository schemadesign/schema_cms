// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filters: Component should render correctly 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Filters"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="project.view.projectsListPage"
            values={Object {}}
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersPageNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="project.view.usersPage"
            values={Object {}}
          />,
          "to": "/user/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectDetailsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project details"
            id="project.view.projectDetails"
            values={Object {}}
          />,
          "to": "/project/1",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "dataSourceNavBtn",
          "label": <FormattedMessage
            defaultMessage="Data Sources"
            id="project.view.projectDataSources"
            values={Object {}}
          />,
          "to": "/project/1/datasource",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project Users"
            id="project.view.projectUsersPage"
            values={Object {}}
          />,
          "to": "/project/1/user",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "folderNavBtn",
          "label": <FormattedMessage
            defaultMessage="Pages"
            id="project.view.projectPages"
            values={Object {}}
          />,
          "to": "/project/1/folder",
          "type": "link_item",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      dataSource={
        Object {
          "project": Object {
            "id": "1",
          },
        }
      }
      fetchFilters={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "dataSourceId": "1",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        }
      }
      filters={
        Array [
          Object {
            "id": 1,
            "isActive": true,
            "name": "name 1",
          },
          Object {
            "id": 2,
            "isActive": false,
            "name": "name 2",
          },
        ]
      }
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
          },
          "url": "/datasource/1/filters",
        }
      }
      setFilters={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div>
        <Styled(Component)
          onClick={[Function]}
        >
          <Component />
        </Styled(Component)>
      </styled.div>
      <styled.div>
        <FormattedMessage
          defaultMessage="{filters, plural,one {# Filter} other {# Filters}}"
          id="dataSource.view.filters.filters"
          values={
            Object {
              "filters": 2,
            }
          }
        />
      </styled.div>
    </styled.div>
    <Formik
      enableReinitialize={true}
      initialValues={
        Array [
          "1",
        ]
      }
      isInitialValid={false}
      onSubmit={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
    >
      <Component />
    </Formik>
  </LoadingWrapper>
  <DataSourceNavigation
    dataSource={
      Object {
        "project": Object {
          "id": "1",
        },
      }
    }
    fetchFilters={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "dataSourceId": "1",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      }
    }
    filters={
      Array [
        Object {
          "id": 1,
          "isActive": true,
          "name": "name 1",
        },
        Object {
          "id": 2,
          "isActive": false,
          "name": "name 2",
        },
      ]
    }
    hideOnDesktop={true}
    history={
      Object {
        "goBack": [Function],
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
        },
        "url": "/datasource/1/filters",
      }
    }
    setFilters={[Function]}
    userRole="admin"
  />
</Fragment>
`;

exports[`Filters: Component should render correctly when no filters 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Filters"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="project.view.projectsListPage"
            values={Object {}}
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersPageNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="project.view.usersPage"
            values={Object {}}
          />,
          "to": "/user/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectDetailsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project details"
            id="project.view.projectDetails"
            values={Object {}}
          />,
          "to": "/project/1",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "dataSourceNavBtn",
          "label": <FormattedMessage
            defaultMessage="Data Sources"
            id="project.view.projectDataSources"
            values={Object {}}
          />,
          "to": "/project/1/datasource",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project Users"
            id="project.view.projectUsersPage"
            values={Object {}}
          />,
          "to": "/project/1/user",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "folderNavBtn",
          "label": <FormattedMessage
            defaultMessage="Pages"
            id="project.view.projectPages"
            values={Object {}}
          />,
          "to": "/project/1/folder",
          "type": "link_item",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      dataSource={
        Object {
          "project": Object {
            "id": "1",
          },
        }
      }
      fetchFilters={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "dataSourceId": "1",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        }
      }
      filters={Array []}
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
          },
          "url": "/datasource/1/filters",
        }
      }
      setFilters={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div>
        <Styled(Component)
          onClick={[Function]}
        >
          <Component />
        </Styled(Component)>
      </styled.div>
      <styled.div>
        <FormattedMessage
          defaultMessage="{filters, plural,one {# Filter} other {# Filters}}"
          id="dataSource.view.filters.filters"
          values={
            Object {
              "filters": 0,
            }
          }
        />
      </styled.div>
    </styled.div>
    <Formik
      enableReinitialize={true}
      initialValues={Array []}
      isInitialValid={false}
      onSubmit={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
    >
      <Component />
    </Formik>
  </LoadingWrapper>
  <DataSourceNavigation
    dataSource={
      Object {
        "project": Object {
          "id": "1",
        },
      }
    }
    fetchFilters={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "dataSourceId": "1",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      }
    }
    filters={Array []}
    hideOnDesktop={true}
    history={
      Object {
        "goBack": [Function],
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
        },
        "url": "/datasource/1/filters",
      }
    }
    setFilters={[Function]}
    userRole="admin"
  />
</Fragment>
`;

exports[`Filters: Component should render correctly with loader 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Filters"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="project.view.projectsListPage"
            values={Object {}}
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersPageNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="project.view.usersPage"
            values={Object {}}
          />,
          "to": "/user/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectDetailsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project details"
            id="project.view.projectDetails"
            values={Object {}}
          />,
          "to": "/project/1",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "dataSourceNavBtn",
          "label": <FormattedMessage
            defaultMessage="Data Sources"
            id="project.view.projectDataSources"
            values={Object {}}
          />,
          "to": "/project/1/datasource",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project Users"
            id="project.view.projectUsersPage"
            values={Object {}}
          />,
          "to": "/project/1/user",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "folderNavBtn",
          "label": <FormattedMessage
            defaultMessage="Pages"
            id="project.view.projectPages"
            values={Object {}}
          />,
          "to": "/project/1/folder",
          "type": "link_item",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Filters"
        id="dataSource.filters.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      dataSource={
        Object {
          "project": Object {
            "id": "1",
          },
        }
      }
      fetchFilters={[Function]}
      filters={
        Array [
          Object {
            "id": 1,
            "isActive": true,
            "name": "name 1",
          },
          Object {
            "id": 2,
            "isActive": false,
            "name": "name 2",
          },
        ]
      }
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
          },
          "url": "/datasource/1/filters",
        }
      }
      setFilters={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={true}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div>
        <Styled(Component)
          onClick={[Function]}
        >
          <Component />
        </Styled(Component)>
      </styled.div>
      <styled.div>
        <FormattedMessage
          defaultMessage="{filters, plural,one {# Filter} other {# Filters}}"
          id="dataSource.view.filters.filters"
          values={
            Object {
              "filters": 2,
            }
          }
        />
      </styled.div>
    </styled.div>
    <Formik
      enableReinitialize={true}
      initialValues={
        Array [
          "1",
        ]
      }
      isInitialValid={false}
      onSubmit={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
    >
      <Component />
    </Formik>
  </LoadingWrapper>
  <DataSourceNavigation
    dataSource={
      Object {
        "project": Object {
          "id": "1",
        },
      }
    }
    fetchFilters={[Function]}
    filters={
      Array [
        Object {
          "id": 1,
          "isActive": true,
          "name": "name 1",
        },
        Object {
          "id": 2,
          "isActive": false,
          "name": "name 2",
        },
      ]
    }
    hideOnDesktop={true}
    history={
      Object {
        "goBack": [Function],
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
        },
        "url": "/datasource/1/filters",
      }
    }
    setFilters={[Function]}
    userRole="admin"
  />
</Fragment>
`;
