// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateDataSourceState: Component should render correctly 1`] = `
.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 24px;
  width: 100%;
}

.c9 {
  display: none;
}

.c10 {
  margin-right: 20px;
  overflow: hidden;
}

.c11 {
  color: #FFF;
}

.c12 {
  color: #FFF;
}

.c24 {
  height: 120px;
}

.c26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c25 {
  bottom: 0;
  width: 100%;
  padding: 10px 0 36px;
  position: fixed;
  width: calc(100% - 40px);
  z-index: 999;
  background-image: linear-gradient( to top, #000,#000 30%, rgba(0,0,0,0) );
}

.c29 {
  width: calc(50% - 5px);
  max-width: 240px;
}

.c28 {
  width: calc(50% - 5px);
  max-width: 240px;
  background-color: #1d1d20;
  color: #FFF;
  border-radius: 30px;
  text-align: center;
  line-height: 30px;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 20px;
  padding: 9px 0;
}

.c17 {
  color: #FFF;
  text-align: center;
  padding: 50px 10px;
  font-weight: 200;
  font-size: 20px;
}

.c0 {
  font-weight: normal;
  width: calc(100% - 50px);
}

.c4 {
  padding-right: 50px;
}

.c3 {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  max-height: 100%;
}

.c5 {
  list-style: none;
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  line-height: 1.5;
  margin: 2px 0;
  cursor: pointer;
  font-size: 24px;
  border-bottom: 2.4px solid #2F2F36;
  padding: 8px 0 13px;
}

.c6 a,
.c6 div {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #71737e;
  display: block;
}

.c7 {
  margin: 10px 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c8 {
  color: #FFF;
  font-size: 14px;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 12px 0;
}

.c1 {
  word-break: break-word;
}

.c2 {
  word-break: break-word;
}

.c13 {
  padding-bottom: 50px;
}

.c14 {
  position: relative;
}

.c15 {
  margin-top: 0;
}

.c16 {
  position: relative;
  top: 0;
  left: 0;
  color: #f21e29;
  font-size: 14px;
  font-weight: normal;
}

.c18 {
  margin-top: 30px;
  border-top: 2px solid #2F2F36;
  padding-top: 15px;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-bottom: 15px;
  position: relative;
}

.c22 {
  padding-right: 10px;
}

.c21 {
  padding-left: 10px;
  max-width: 100%;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 100%;
  padding-right: 10px;
}

.c23 {
  color: #71737e;
  min-width: 100%;
}

@media (min-width:1050px) {
  .c9 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    margin: 60px 0 40px 0;
    min-height: 63px;
  }
}

@media (min-width:1050px) {
  .c24 {
    height: 100px;
  }
}

@media (min-width:1050px) {
  .c26 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}

@media (min-width:1050px) {
  .c25 {
    position: fixed;
    width: calc(100% - 40px);
    z-index: 999;
    background-image: linear-gradient( to top, #000,#000 30%, rgba(0,0,0,0) );
    padding: 10px 0 36px;
    width: 1000px;
  }
}

@media (min-width:1050px) {
  .c29 {
    width: 240px;
  }
}

@media (min-width:1050px) {
  .c28 {
    width: 240px;
  }
}

@media (min-width:1050px) {
  .c0 {
    display: none;
  }
}

@media (min-width:1050px) {
  .c4 {
    height: 54px;
  }
}

@media (min-width:1050px) {
  .c3 {
    padding-bottom: 20px;
  }
}

@media (min-width:768px) {

}

@media (min-width:1050px) {
  .c15 {
    margin-top: 0;
  }
}

@media (min-width:480px) {
  .c19 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media (min-width:480px) {
  .c20 {
    padding-right: 40px;
  }
}

<form
  className=""
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <div
      style={
        Object {
          "alignItems": "flex-start",
          "color": "#FFF",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": "18px",
          "width": "100%",
        }
      }
    >
      <div>
        <div
          className=""
        >
          <h2
            className="c1"
            id="headerTitle"
            style={
              Object {
                "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                "fontSize": "24px",
                "fontWeight": 100,
                "margin": 0,
              }
            }
          >
            State
          </h2>
          <h1
            className="c2"
            id="headerSubtitle"
            style={
              Object {
                "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                "fontSize": "24px",
                "fontWeight": 600,
                "letterSpacing": "-0.12px",
                "lineHeight": 1.25,
                "margin": 0,
              }
            }
          >
            Create
          </h1>
        </div>
      </div>
      <button
        disabled={false}
        id="topHeaderOpenMenuBtn"
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "border": "none",
            "borderRadius": "30px",
            "color": "#FFF",
            "cursor": "pointer",
            "display": "flex",
            "fill": "#FFF",
            "fontSize": "20px",
            "justifyContent": "center",
            "margin": "0",
            "minHeight": "48px",
            "outline": "none",
            "padding": "0",
            "position": "absolute",
            "right": -6,
            "top": 6,
            "transition": "background 0.25s ease-in-out, color 0.25s ease-in-out",
          }
        }
        type="button"
      >
        <svg
          style={
            Object {
              "fill": "#FFF",
              "height": "60px",
              "width": "60px",
            }
          }
          viewBox="0 0 10 60"
        >
          <path
            d="M5 37a3 3 0 110 6 3 3 0 010-6zm0-10a3 3 0 110 6 3 3 0 010-6zm0-10a3 3 0 110 6 3 3 0 010-6z"
            fillRule="evenodd"
          />
        </svg>
      </button>
    </div>
    <div
      id=""
      style={
        Object {
          "backgroundColor": "#000",
          "bottom": 0,
          "color": "#FFF",
          "maxWidth": null,
          "padding": "18px 20px 27px",
          "position": "absolute",
          "right": 0,
          "textAlign": "left",
          "top": 0,
          "transform": "translateX(100%)",
          "transition": "transform 400ms cubic-bezier(0.86, 0, 0.07, 1), visibility 0s linear 400ms",
          "visibility": 0,
          "width": "100%",
          "zIndex": 99999,
        }
      }
    >
      <div
        className="c3"
      >
        <div
          className="c4"
        >
          <div
            className=""
          >
            <h2
              className="c1"
              id="headerTitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 100,
                  "margin": 0,
                }
              }
            >
              State
            </h2>
            <h1
              className="c2"
              id="headerSubtitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 600,
                  "letterSpacing": "-0.12px",
                  "lineHeight": 1.25,
                  "margin": 0,
                }
              }
            >
              Create
            </h1>
          </div>
        </div>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <a
              href="/project/"
              id="projectsNavBtn"
              onClick={[Function]}
            >
              Projects
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/user/"
              id="usersPageNavBtn"
              onClick={[Function]}
            >
              Users
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/project/1"
              id="projectDetailsNavBtn"
              onClick={[Function]}
            >
              Project details
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/project/1/datasource"
              id="dataSourceNavBtn"
              onClick={[Function]}
            >
              Data Sources
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/project/1/user"
              id="usersNavBtn"
              onClick={[Function]}
            >
              Project Users
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/project/1/content"
              id="contentNavBtn"
              onClick={[Function]}
            >
              Content
            </a>
          </div>
          <div
            className="c6"
          >
            <a
              href="/project/1/templates"
              id="templatesNavBtn"
              onClick={[Function]}
            >
              Templates
            </a>
          </div>
        </div>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <a
              href="/settings"
              id="settingsNavBtn"
              onClick={[Function]}
            >
              Settings
            </a>
          </div>
          <div
            className="c6"
          >
            <div
              id="logoutNavBtn"
              onClick={[Function]}
            >
              Log out
            </div>
          </div>
        </div>
        <div
          className="c7"
        >
          <a
            className="c8"
            href="/"
            id="aboutNavBtn"
            onClick={[Function]}
            rel="noreferrer"
            target="_blank"
          >
            About Schema CMS
          </a>
          <a
            className="c8"
            href="https://github.com/schemadesign/schema_cms/blob/master/backend/app/docs/public_api/api_calls.md"
            id="apiNavBtn"
            onClick={[Function]}
            rel="noreferrer"
            target="_blank"
          >
            API Doc
          </a>
          <a
            className="c8"
            href="https://github.com/schemadesign/schema_cms"
            id="repositoryNavBtn"
            onClick={[Function]}
            rel="noreferrer"
            target="_blank"
          >
            GitHub Repository
          </a>
        </div>
      </div>
      <button
        disabled={false}
        id="topHeaderCloseMenuButton"
        onClick={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "border": "none",
            "borderRadius": "30px",
            "color": "#FFF",
            "cursor": "pointer",
            "display": "flex",
            "fill": "#FFF",
            "fontSize": "20px",
            "justifyContent": "center",
            "margin": "0",
            "minHeight": "48px",
            "outline": "none",
            "padding": "0",
            "position": "absolute",
            "right": 0,
            "top": "6px",
            "transition": "background 0.25s ease-in-out, color 0.25s ease-in-out",
          }
        }
        type="button"
      >
        <svg
          style={
            Object {
              "fill": "#FFF",
              "height": "60px",
              "width": "60px",
            }
          }
          viewBox="0 0 60 60"
        >
          <path
            d="M39.192 17.98l2.829 2.828L32.828 30l9.193 9.192-2.829 2.829L30 32.828l-9.192 9.193-2.829-2.829L27.172 30l-9.193-9.192 2.829-2.829L30 27.172l9.192-9.193z"
            fillRule="evenodd"
          />
        </svg>
      </button>
    </div>
  </div>
  <div
    className="c9"
  >
    <div
      className="c10"
    >
      <h2
        className="c11"
        id="desktopHeaderTitle"
        style={
          Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 100,
            "margin": 0,
          }
        }
      >
        State
      </h2>
      <h1
        className="c12"
        id="desktopHeaderSubtitle"
        style={
          Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 600,
            "letterSpacing": "-0.12px",
            "lineHeight": 1.25,
            "margin": 0,
          }
        }
      >
        Create
      </h1>
    </div>
    <div
      className=""
    />
  </div>
  <div
    className="c13"
  >
    <div
      className="c14"
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "maxWidth": "100%",
            "paddingBottom": "30px",
            "position": "relative",
          }
        }
      >
        <label
          htmlFor="name"
          style={
            Object {
              "border": "none",
              "borderTop": "2px solid #2F2F36",
              "color": "#71737e",
              "display": "block",
              "fontSize": "14px",
              "outline": "none",
              "paddingTop": "8px",
              "width": "100%",
            }
          }
        >
          Name
        </label>
        <input
          id="name"
          name="name"
          onBlur={[Function]}
          onChange={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "border": "none",
              "color": "#FFF",
              "fontFamily": "inherit",
              "fontSize": "18px",
              "fontWeight": "inherit",
              "letterSpacing": "normal",
              "lineHeight": "24px",
              "maxWidth": "100%",
              "minWidth": 60,
              "outline": "none",
              "padding": 0,
            }
          }
          type="text"
          value=""
        />
        <div
          style={
            Object {
              "position": "absolute",
              "right": 0,
              "top": 2,
            }
          }
        >
          <label
            htmlFor="name"
            style={
              Object {
                "cursor": "pointer",
              }
            }
          >
            <div
              className="c15"
            >
              <svg
                style={
                  Object {
                    "fill": "#FFF",
                    "height": "30px",
                    "width": "30px",
                  }
                }
                viewBox="0 0 30 30"
              >
                <path
                  d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </label>
        </div>
      </div>
      <div
        className="c16"
        id="nameError"
      />
    </div>
    <div
      className="c14"
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "maxWidth": "100%",
            "paddingBottom": "30px",
            "position": "relative",
          }
        }
      >
        <label
          htmlFor="description"
          style={
            Object {
              "border": "none",
              "borderTop": "2px solid #2F2F36",
              "color": "#71737e",
              "display": "block",
              "fontSize": "14px",
              "outline": "none",
              "paddingTop": "8px",
              "width": "100%",
            }
          }
        >
          Description
        </label>
        <textarea
          id="description"
          onBlur={[Function]}
          onChange={[Function]}
          style={
            Object {
              "background": "#000",
              "border": "none",
              "color": "#FFF",
              "fontSize": "18px",
              "height": 0,
              "lineHeight": "24px",
              "outline": "none",
              "padding": "0",
              "resize": "none",
            }
          }
          value=""
        />
        <textarea
          aria-hidden={true}
          readOnly={true}
          style={
            Object {
              "background": "#000",
              "border": "none",
              "color": "#FFF",
              "fontSize": "18px",
              "height": 0,
              "left": 0,
              "lineHeight": "24px",
              "outline": "none",
              "overflow": "hidden",
              "padding": "0",
              "position": "absolute",
              "resize": "none",
              "top": 0,
              "visibility": "hidden",
            }
          }
          tabIndex={-1}
        />
        <div
          style={
            Object {
              "position": "absolute",
              "right": 0,
              "top": 2,
            }
          }
        >
          <label
            htmlFor="description"
            style={
              Object {
                "cursor": "pointer",
              }
            }
          >
            <div
              className="c15"
            >
              <svg
                style={
                  Object {
                    "fill": "#FFF",
                    "height": "30px",
                    "width": "30px",
                  }
                }
                viewBox="0 0 30 30"
              >
                <path
                  d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </label>
        </div>
      </div>
      <div
        className="c16"
        id="descriptionError"
      />
    </div>
    <div
      className="c14"
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "maxWidth": "100%",
            "paddingBottom": "30px",
            "position": "relative",
          }
        }
      >
        <label
          htmlFor="sourceUrl"
          style={
            Object {
              "border": "none",
              "borderTop": "2px solid #2F2F36",
              "color": "#71737e",
              "display": "block",
              "fontSize": "14px",
              "outline": "none",
              "paddingTop": "8px",
              "width": "100%",
            }
          }
        >
          Source URL
        </label>
        <input
          id="sourceUrl"
          name="sourceUrl"
          onBlur={[Function]}
          onChange={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "border": "none",
              "color": "#FFF",
              "fontFamily": "inherit",
              "fontSize": "18px",
              "fontWeight": "inherit",
              "letterSpacing": "normal",
              "lineHeight": "24px",
              "maxWidth": "100%",
              "minWidth": 60,
              "outline": "none",
              "padding": 0,
            }
          }
          type="text"
          value=""
        />
        <div
          style={
            Object {
              "position": "absolute",
              "right": 0,
              "top": 2,
            }
          }
        >
          <label
            htmlFor="sourceUrl"
            style={
              Object {
                "cursor": "pointer",
              }
            }
          >
            <div
              className="c15"
            >
              <svg
                style={
                  Object {
                    "fill": "#FFF",
                    "height": "30px",
                    "width": "30px",
                  }
                }
                viewBox="0 0 30 30"
              >
                <path
                  d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </label>
        </div>
      </div>
      <div
        className="c16"
        id="sourceUrlError"
      />
    </div>
    <label
      style={
        Object {
          "border": "none",
          "borderTop": "2px solid #2F2F36",
          "color": "#71737e",
          "display": "block",
          "fontSize": "14px",
          "outline": "none",
          "paddingTop": "8px",
          "width": "100%",
        }
      }
    >
      Tags
    </label>
    <div
      className="c17"
    >
      No Tags available
    </div>
    <label
      style={
        Object {
          "border": "none",
          "borderTop": "2px solid #2F2F36",
          "color": "#71737e",
          "display": "block",
          "fontSize": "14px",
          "outline": "none",
          "paddingTop": "8px",
          "width": "100%",
        }
      }
    >
      Filters
    </label>
    <div
      className="c17"
    >
      No Filters available
    </div>
    <div
      className="c18"
    >
      <div
        className="c19"
      >
        <div
          className="c20"
        >
          <div>
            <input
              checked={false}
              id="isPublic"
              onChange={[Function]}
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                }
              }
              type="checkbox"
            />
            <label
              htmlFor="isPublic"
            >
              <div
                style={
                  Object {
                    "background": "#2F2F36",
                    "borderRadius": 20,
                    "boxSizing": "border-box",
                    "cursor": "pointer",
                    "height": 24,
                    "padding": 2,
                    "transition": "background 200ms ease-in-out",
                    "width": 44,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "background": "#FFF",
                      "borderRadius": "50%",
                      "height": 20,
                      "transform": "translateX(0)",
                      "transition": "transform 200ms ease-in-out",
                      "width": 20,
                    }
                  }
                />
              </div>
            </label>
          </div>
          <div
            className="c21"
          >
            <label
              className="c22"
              htmlFor="isPublic"
            >
              Make it Public
            </label>
            <span
              className="c23"
            >
              This State is currently Private
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c24"
  >
    <div
      className="c25"
    >
      <div
        className="c26"
      >
        <div
          className="c27"
        >
          <a
            className="c28"
            disabled={false}
            href="/datasource/dataSourceId/state"
            onClick={[Function]}
          >
            Cancel
          </a>
          <button
            className="c29"
            disabled={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#1d1d20",
                "border": "none",
                "borderRadius": "30px",
                "color": "#71737e",
                "cursor": "default",
                "display": "flex",
                "fill": "#FFF",
                "fontSize": "20px",
                "justifyContent": "center",
                "margin": "0",
                "minHeight": "48px",
                "outline": "none",
                "padding": "0",
                "transition": "background 0.25s ease-in-out, color 0.25s ease-in-out",
              }
            }
            type="submit"
          >
            Create
          </button>
        </div>
      </div>
    </div>
  </div>
</form>
`;
