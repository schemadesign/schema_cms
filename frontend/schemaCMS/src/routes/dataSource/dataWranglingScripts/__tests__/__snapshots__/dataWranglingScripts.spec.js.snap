// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataWranglingScripts: Component should render correctly 1`] = `
<DndProvider
  backend={[Function]}
  options={Object {}}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Data Wrangling"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
    options={Array []}
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
        ]
      }
      uploadScript={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div />
      <styled.div>
        <FormattedMessage
          defaultMessage="{steps, plural,one {# Step} other {# Steps}}"
          id="dataSource.dataWranglingScripts.counterSteps"
          values={
            Object {
              "steps": 3,
            }
          }
        />
      </styled.div>
      <styled.div>
        <Component
          accept=".py"
          disabled={false}
          id="fileUpload"
          onChange={[Function]}
          type="file"
        />
      </styled.div>
    </styled.div>
    <Component
      customCheckboxStyles={
        Object {
          "width": "100%",
        }
      }
      customStyles={
        Object {
          "borderTop": "none",
        }
      }
      id="fieldStepsCheckboxGroup"
      name="steps"
      onChange={[Function]}
      value={
        Array [
          "1",
        ]
      }
    >
      <Component
        customStyles={
          Object {
            "marginBottom": 20,
          }
        }
      >
        <FormattedMessage
          defaultMessage="Selected steps"
          id="dataSource.dataWranglingScripts.selectedScripts"
          values={Object {}}
        />
      </Component>
      <div
        key="0"
      >
        <Component
          id="drag-checkbox-0"
          value="1"
        >
          <styled.div>
            <Styled(Link)
              to="/script/1"
            >
              <styled.div
                drag={false}
              >
                 
                name 1
              </styled.div>
              <styled.div />
              <styled.div>
                <FormattedMessage
                  defaultMessage="Uploaded"
                  id="dataSource.dataWranglingScripts.0"
                  values={Object {}}
                />
              </styled.div>
            </Styled(Link)>
          </styled.div>
        </Component>
      </div>
      <Component
        customStyles={
          Object {
            "margin": "40px 0 20px 0",
          }
        }
      >
        <FormattedMessage
          defaultMessage="Steps"
          id="dataSource.dataWranglingScripts.steps"
          values={Object {}}
        />
      </Component>
      <div
        key="0"
      >
        <Component
          id="checkbox-0"
          value="1"
        >
          <styled.div>
            <Styled(Link)
              to="/script/1"
            >
              <styled.div
                drag={false}
              >
                 
                name 1
              </styled.div>
              <styled.div />
              <styled.div>
                <FormattedMessage
                  defaultMessage="Uploaded"
                  id="dataSource.dataWranglingScripts.0"
                  values={Object {}}
                />
              </styled.div>
            </Styled(Link)>
          </styled.div>
        </Component>
      </div>
      <div
        key="1"
      >
        <Component
          id="checkbox-1"
          value="2"
        >
          <styled.div>
            <Styled(Link)
              to="/script/2/1"
            >
              <styled.div
                drag={false}
              >
                 
                name 2
              </styled.div>
              <styled.div />
              <styled.div>
                <FormattedMessage
                  defaultMessage="Default"
                  id="dataSource.dataWranglingScripts.2"
                  values={Object {}}
                />
              </styled.div>
            </Styled(Link)>
          </styled.div>
        </Component>
      </div>
    </Component>
    <NavigationContainer
      fixed={true}
      hideOnDesktop={false}
      padding="40px 0 70px"
      right={true}
    >
      <NextButton
        disabled={false}
        loading={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Save"
          id="dataSource.dataWranglingScripts.save"
          values={Object {}}
        />
      </NextButton>
    </NavigationContainer>
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={true}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
        ]
      }
      uploadScript={[Function]}
      userRole="admin"
    />
  </LoadingWrapper>
</DndProvider>
`;

exports[`DataWranglingScripts: Component should render correctly multiple checked scripts 1`] = `
<DndProvider
  backend={[Function]}
  options={Object {}}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Data Wrangling"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
    options={Array []}
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={Array []}
      uploadScript={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div />
      <styled.div>
        <FormattedMessage
          defaultMessage="{steps, plural,one {# Step} other {# Steps}}"
          id="dataSource.dataWranglingScripts.counterSteps"
          values={
            Object {
              "steps": 3,
            }
          }
        />
      </styled.div>
      <styled.div>
        <Component
          accept=".py"
          disabled={false}
          id="fileUpload"
          onChange={[Function]}
          type="file"
        />
      </styled.div>
    </styled.div>
    <Component
      customCheckboxStyles={
        Object {
          "width": "100%",
        }
      }
      customStyles={
        Object {
          "borderTop": "none",
        }
      }
      id="fieldStepsCheckboxGroup"
      name="steps"
      onChange={[Function]}
      value={
        Array [
          "1",
          "2",
          "3",
        ]
      }
    >
      <Component
        customStyles={
          Object {
            "marginBottom": 20,
          }
        }
      >
        <FormattedMessage
          defaultMessage="Selected steps"
          id="dataSource.dataWranglingScripts.selectedScripts"
          values={Object {}}
        />
      </Component>
      <Draggable
        accept="CHECKBOX"
        id={1}
        index={0}
        key="1"
        onMove={[Function]}
      >
        <Component />
      </Draggable>
      <Draggable
        accept="CHECKBOX"
        id={2}
        index={1}
        key="2"
        onMove={[Function]}
      >
        <Component />
      </Draggable>
      <Draggable
        accept="CHECKBOX"
        id={3}
        index={2}
        key="3"
        onMove={[Function]}
      >
        <Component />
      </Draggable>
    </Component>
    <NavigationContainer
      fixed={true}
      hideOnDesktop={false}
      padding="40px 0 70px"
      right={true}
    >
      <NextButton
        disabled={false}
        loading={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Save"
          id="dataSource.dataWranglingScripts.save"
          values={Object {}}
        />
      </NextButton>
    </NavigationContainer>
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={true}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={Array []}
      uploadScript={[Function]}
      userRole="admin"
    />
  </LoadingWrapper>
</DndProvider>
`;

exports[`DataWranglingScripts: Component should render empty list 1`] = `
<DndProvider
  backend={[Function]}
  options={Object {}}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Data Wrangling"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
    options={Array []}
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={Array []}
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
        ]
      }
      uploadScript={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div />
      <styled.div>
        <FormattedMessage
          defaultMessage="{steps, plural,one {# Step} other {# Steps}}"
          id="dataSource.dataWranglingScripts.counterSteps"
          values={
            Object {
              "steps": 0,
            }
          }
        />
      </styled.div>
      <styled.div>
        <Component
          accept=".py"
          disabled={false}
          id="fileUpload"
          onChange={[Function]}
          type="file"
        />
      </styled.div>
    </styled.div>
    <NavigationContainer
      fixed={true}
      hideOnDesktop={false}
      padding="40px 0 70px"
      right={true}
    >
      <NextButton
        disabled={false}
        loading={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Save"
          id="dataSource.dataWranglingScripts.save"
          values={Object {}}
        />
      </NextButton>
    </NavigationContainer>
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={Array []}
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={true}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
        ]
      }
      uploadScript={[Function]}
      userRole="admin"
    />
  </LoadingWrapper>
</DndProvider>
`;

exports[`DataWranglingScripts: Component should render only checked scripts 1`] = `
<DndProvider
  backend={[Function]}
  options={Object {}}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Data Wrangling"
  />
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
    options={Array []}
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Data Wrangling"
        id="dataSource.dataWranglingScripts.subTitle"
        values={Object {}}
      />
    }
  >
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={false}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={Array []}
      uploadScript={[Function]}
      userRole="admin"
    />
  </ContextHeader>
  <LoadingWrapper
    error={null}
    loading={false}
    noData={false}
    noDataContent={null}
  >
    <styled.div>
      <styled.div />
      <styled.div>
        <FormattedMessage
          defaultMessage="{steps, plural,one {# Step} other {# Steps}}"
          id="dataSource.dataWranglingScripts.counterSteps"
          values={
            Object {
              "steps": 3,
            }
          }
        />
      </styled.div>
      <styled.div>
        <Component
          accept=".py"
          disabled={false}
          id="fileUpload"
          onChange={[Function]}
          type="file"
        />
      </styled.div>
    </styled.div>
    <Component
      customCheckboxStyles={
        Object {
          "width": "100%",
        }
      }
      customStyles={
        Object {
          "borderTop": "none",
        }
      }
      id="fieldStepsCheckboxGroup"
      name="steps"
      onChange={[Function]}
      value={
        Array [
          "1",
        ]
      }
    >
      <Component
        customStyles={
          Object {
            "marginBottom": 20,
          }
        }
      >
        <FormattedMessage
          defaultMessage="Selected steps"
          id="dataSource.dataWranglingScripts.selectedScripts"
          values={Object {}}
        />
      </Component>
      <div
        key="0"
      >
        <Component
          id="drag-checkbox-0"
          value="1"
        >
          <styled.div>
            <Styled(Link)
              to="/script/1"
            >
              <styled.div
                drag={false}
              >
                 
                name 1
              </styled.div>
              <styled.div />
              <styled.div>
                <FormattedMessage
                  defaultMessage="Uploaded"
                  id="dataSource.dataWranglingScripts.0"
                  values={Object {}}
                />
              </styled.div>
            </Styled(Link)>
          </styled.div>
        </Component>
      </div>
    </Component>
    <NavigationContainer
      fixed={true}
      hideOnDesktop={false}
      padding="40px 0 70px"
      right={true}
    >
      <NextButton
        disabled={false}
        loading={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Save"
          id="dataSource.dataWranglingScripts.save"
          values={Object {}}
        />
      </NextButton>
    </NavigationContainer>
    <DataSourceNavigation
      bindSubmitForm={[Function]}
      checkedScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
        ]
      }
      customScripts={Array []}
      dataSource={
        Object {
          "metaData": Object {},
          "project": Object {
            "id": "1",
          },
        }
      }
      dataWranglingScripts={
        Array [
          Object {
            "id": 1,
            "isPredefined": false,
            "name": "name 1",
            "specs": Object {},
            "type": 0,
          },
          Object {
            "id": 2,
            "isPredefined": true,
            "name": "name 2",
            "specs": Object {},
            "type": 2,
          },
          Object {
            "id": 3,
            "isPredefined": true,
            "name": "name 3",
            "specs": Object {
              "type": "type",
            },
            "type": 1,
          },
        ]
      }
      fetchDataWranglingScripts={[Function]}
      hideOnDesktop={true}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      imageScrapingFields={Array []}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isAdmin={true}
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "3",
          },
          "url": "/datasource/1/steps",
        }
      }
      sendUpdatedDataWranglingScript={[Function]}
      setCheckedScripts={[Function]}
      setScriptsList={[Function]}
      uncheckedScripts={Array []}
      uploadScript={[Function]}
      userRole="admin"
    />
  </LoadingWrapper>
</DndProvider>
`;

exports[`DataWranglingScripts: Component should render only unchecked scripts 1`] = `
<Component
  customCheckboxStyles={
    Object {
      "width": "100%",
    }
  }
  customStyles={
    Object {
      "borderTop": "none",
    }
  }
  id="fieldStepsCheckboxGroup"
  name="steps"
  onChange={[Function]}
  value={Array []}
>
  <Component
    customStyles={
      Object {
        "margin": "40px 0 20px 0",
      }
    }
  >
    <FormattedMessage
      defaultMessage="Steps"
      id="dataSource.dataWranglingScripts.steps"
      values={Object {}}
    />
  </Component>
  <div
    key="0"
  >
    <Component
      id="checkbox-0"
      value="1"
    >
      <styled.div>
        <Styled(Link)
          to="/script/1"
        >
          <styled.div
            drag={false}
          >
             
            name 1
          </styled.div>
          <styled.div />
          <styled.div>
            <FormattedMessage
              defaultMessage="Uploaded"
              id="dataSource.dataWranglingScripts.0"
              values={Object {}}
            />
          </styled.div>
        </Styled(Link)>
      </styled.div>
    </Component>
  </div>
  <div
    key="1"
  >
    <Component
      id="checkbox-1"
      value="2"
    >
      <styled.div>
        <Styled(Link)
          to="/script/2/1"
        >
          <styled.div
            drag={false}
          >
             
            name 2
          </styled.div>
          <styled.div />
          <styled.div>
            <FormattedMessage
              defaultMessage="Default"
              id="dataSource.dataWranglingScripts.2"
              values={Object {}}
            />
          </styled.div>
        </Styled(Link)>
      </styled.div>
    </Component>
  </div>
</Component>
`;
