// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View: Component should not render any step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle={null}
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={null}
    title="name"
  />
</styled.div>
`;

exports[`View: Component should not render content 1`] = `<styled.div />`;

exports[`View: Component should render draft 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="Create Data Source"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
      ]
    }
  />
  <ContextHeader
    subtitle="Source"
    title="Create Data Source"
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": null,
        "project": "1",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    fetchPreview={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAdmin={true}
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    onDataSourceChange={[Function]}
    previewData={Object {}}
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountFields={[Function]}
    uploadScript={[Function]}
  />
</styled.div>
`;

exports[`View: Component should render second step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
      ]
    }
  />
  <ContextHeader
    subtitle="Source"
    title="name"
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": Object {},
        "name": "name",
        "project": "1",
        "step": "2",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    fetchPreview={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAdmin={true}
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    onDataSourceChange={[Function]}
    previewData={Object {}}
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountFields={[Function]}
    uploadScript={[Function]}
  />
</styled.div>
`;

exports[`View: Component should render source step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
      ]
    }
  />
  <ContextHeader
    subtitle="Source"
    title="name"
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": Object {},
        "name": "name",
        "project": "1",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    fetchPreview={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAdmin={true}
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    onDataSourceChange={[Function]}
    previewData={Object {}}
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountFields={[Function]}
    uploadScript={[Function]}
  />
</styled.div>
`;
