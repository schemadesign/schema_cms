// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View: Component should not render any step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle={null}
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <styled.div>
    <Component
      customStyles={
        Object {
          "padding": "0 40px",
        }
      }
      id="removeDataSourceDesktopBtn"
      onClick={[Function]}
    >
      Remove Data Source
    </Component>
  </styled.div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Confirm Removal"
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.9)",
          "border": null,
          "borderRadius": "4px",
          "bottom": "40px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "color": "FFFFFF",
          "display": "flex",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to remove the data source?"
        id="dataSource.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="dataSource.view.cancelRemoval"
          values={Object {}}
        />
      </Styled(Component)>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="dataSource.view.confirmRemoval"
          values={Object {}}
        />
      </Styled(Component)>
    </styled.div>
  </Modal>
</styled.div>
`;

exports[`View: Component should not render content 1`] = `<styled.div />`;

exports[`View: Component should render draft 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="Create Data Source"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": null,
        "project": "1",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountDataSource={[Function]}
    unmountFields={[Function]}
    updateDataSource={[Function]}
    uploadScript={[Function]}
  />
  <styled.div>
    <Component
      customStyles={
        Object {
          "padding": "0 40px",
        }
      }
      id="removeDataSourceDesktopBtn"
      onClick={[Function]}
    >
      Remove Data Source
    </Component>
  </styled.div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Confirm Removal"
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.9)",
          "border": null,
          "borderRadius": "4px",
          "bottom": "40px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "color": "FFFFFF",
          "display": "flex",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to remove the data source?"
        id="dataSource.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="dataSource.view.cancelRemoval"
          values={Object {}}
        />
      </Styled(Component)>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="dataSource.view.confirmRemoval"
          values={Object {}}
        />
      </Styled(Component)>
    </styled.div>
  </Modal>
</styled.div>
`;

exports[`View: Component should render second step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": Object {},
        "name": "name",
        "project": "1",
        "step": "2",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountDataSource={[Function]}
    unmountFields={[Function]}
    updateDataSource={[Function]}
    uploadScript={[Function]}
  />
  <styled.div>
    <Component
      customStyles={
        Object {
          "padding": "0 40px",
        }
      }
      id="removeDataSourceDesktopBtn"
      onClick={[Function]}
    >
      Remove Data Source
    </Component>
  </styled.div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Confirm Removal"
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.9)",
          "border": null,
          "borderRadius": "4px",
          "bottom": "40px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "color": "FFFFFF",
          "display": "flex",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to remove the data source?"
        id="dataSource.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="dataSource.view.cancelRemoval"
          values={Object {}}
        />
      </Styled(Component)>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="dataSource.view.confirmRemoval"
          values={Object {}}
        />
      </Styled(Component)>
    </styled.div>
  </Modal>
</styled.div>
`;

exports[`View: Component should render source step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/1/datasource/",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <WithTheme(SourceComponent)
    dataSource={
      Object {
        "id": "id",
        "metaData": Object {},
        "name": "name",
        "project": "1",
      }
    }
    dataWranglingScripts={Array []}
    fetchDataSource={[Function]}
    fetchDataWranglingScripts={[Function]}
    fetchFields={[Function]}
    fetchFilters={[Function]}
    filters={Array []}
    history={
      Object {
        "push": [Function],
      }
    }
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isAnyJobProcessing={false}
    match={
      Object {
        "params": Object {
          "dataSourceId": "1",
          "step": "1",
        },
      }
    }
    removeDataSource={[Function]}
    sendUpdatedDataWranglingScript={[Function]}
    setFilters={[Function]}
    unmountDataSource={[Function]}
    unmountFields={[Function]}
    updateDataSource={[Function]}
    uploadScript={[Function]}
  />
  <styled.div>
    <Component
      customStyles={
        Object {
          "padding": "0 40px",
        }
      }
      id="removeDataSourceDesktopBtn"
      onClick={[Function]}
    >
      Remove Data Source
    </Component>
  </styled.div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Confirm Removal"
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.9)",
          "border": null,
          "borderRadius": "4px",
          "bottom": "40px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "color": "FFFFFF",
          "display": "flex",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to remove the data source?"
        id="dataSource.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="dataSource.view.cancelRemoval"
          values={Object {}}
        />
      </Styled(Component)>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="dataSource.view.confirmRemoval"
          values={Object {}}
        />
      </Styled(Component)>
    </styled.div>
  </Modal>
</styled.div>
`;
