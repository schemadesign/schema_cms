// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View: Component should render content correctly 1`] = `
<Fragment>
  <styled.div>
    <styled.ul>
      <styled.li
        key="0"
      >
        <Component
          customStyles={
            Object {
              "cursor": "pointer",
              "fontWeight": 600,
            }
          }
          headerComponent={
            <ForwardRef(styled.span)>
              Data Sources
            </ForwardRef(styled.span)>
          }
          id="projectDataSources"
          onClick={[Function]}
        >
          <styled.span
            id="projectDataSourcesValue"
          >
            3
          </styled.span>
        </Component>
      </styled.li>
      <styled.li
        key="1"
      >
        <Component
          customStyles={
            Object {
              "cursor": "pointer",
              "fontWeight": 600,
            }
          }
          headerComponent={
            <ForwardRef(styled.span)>
              Charts
            </ForwardRef(styled.span)>
          }
          onClick={[Function]}
        >
          <styled.span
            id="undefinedValue"
          >
            0
          </styled.span>
        </Component>
      </styled.li>
      <styled.li
        key="2"
      >
        <Component
          customStyles={
            Object {
              "cursor": "pointer",
              "fontWeight": 600,
            }
          }
          headerComponent={
            <ForwardRef(styled.span)>
              Pages
            </ForwardRef(styled.span)>
          }
          id="projectUsers"
          onClick={[Function]}
        >
          <styled.span
            id="projectUsersValue"
          >
            1
          </styled.span>
        </Component>
      </styled.li>
      <styled.li
        key="3"
      >
        <Component
          customStyles={
            Object {
              "cursor": "pointer",
              "fontWeight": 600,
            }
          }
          headerComponent={
            <ForwardRef(styled.span)>
              Users
            </ForwardRef(styled.span)>
          }
          id="projectUsers"
          onClick={[Function]}
        >
          <styled.span
            id="projectUsersValue"
          >
            2
          </styled.span>
        </Component>
      </styled.li>
    </styled.ul>
    <styled.ul>
      <styled.li
        key="0"
        order={1}
      >
        <styled.div
          id="fieldLastUpdated"
        >
          <styled.span
            id="fieldLastUpdatedLabel"
          >
            Last Update
          </styled.span>
          <styled.span
            id="fieldLastUpdatedValue"
          >
            3 months ago
          </styled.span>
        </styled.div>
      </styled.li>
      <styled.li
        key="1"
        order={3}
      >
        <styled.div
          id="fieldStatus"
        >
          <styled.span
            id="fieldStatusLabel"
          >
            Status
          </styled.span>
          <styled.span
            id="fieldStatusValue"
          >
            Status
          </styled.span>
        </styled.div>
      </styled.li>
      <styled.li
        key="2"
        order={5}
      >
        <styled.div
          id="fieldOwner"
        >
          <styled.span
            id="fieldOwnerLabel"
          >
            Owner
          </styled.span>
          <styled.span
            id="fieldOwnerValue"
          >
            Firstname Lastname
          </styled.span>
        </styled.div>
      </styled.li>
      <styled.li
        key="3"
        order={2}
      >
        <styled.div
          id="fieldTitle"
        >
          <styled.span
            id="fieldTitleLabel"
          >
            Title
          </styled.span>
          <styled.span
            id="fieldTitleValue"
          >
            Project Name
          </styled.span>
        </styled.div>
      </styled.li>
      <styled.li
        key="4"
        order={4}
      >
        <styled.div
          id="fieldDescription"
        >
          <styled.span
            id="fieldDescriptionLabel"
          >
            Description
          </styled.span>
          <styled.span
            id="fieldDescriptionValue"
          >
            Description
          </styled.span>
        </styled.div>
      </styled.li>
      <styled.li
        key="5"
        order={6}
      >
        <styled.div
          id="fieldSlug"
        >
          <styled.span
            id="fieldSlugLabel"
          >
            API
          </styled.span>
          <styled.span
            id="fieldSlugValue"
          >
            schemacms/api/project_title
          </styled.span>
        </styled.div>
      </styled.li>
    </styled.ul>
  </styled.div>
  <styled.div>
    <Styled(Span)
      id="deleteProjectDesktopBtn"
      onClick={[Function]}
    >
      <FormattedMessage
        defaultMessage="Delete Project"
        id="project.view.deleteProject"
        values={Object {}}
      />
    </Styled(Span)>
  </styled.div>
</Fragment>
`;

exports[`View: Component should render correctly 1`] = `
<styled.div>
  <div>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
      title="Project"
    />
    <MobileMenu
      active="projectDetailsNavBtn"
      headerSubtitle="Project Name"
      headerTitle={
        <FormattedMessage
          defaultMessage="Project"
          id="project.view.title"
          values={Object {}}
        />
      }
      options={
        Array [
          Object {
            "allowedRoles": Array [
              "admin",
              "editor",
            ],
            "id": "projectsNavBtn",
            "label": <FormattedMessage
              defaultMessage="Projects"
              id="project.view.projectsListPage"
              values={Object {}}
            />,
            "to": "/project/",
            "type": "link_item",
          },
          Object {
            "allowedRoles": Array [
              "admin",
            ],
            "id": "usersPageNavBtn",
            "label": <FormattedMessage
              defaultMessage="Users"
              id="project.view.usersPage"
              values={Object {}}
            />,
            "to": "/user/",
            "type": "link_item",
          },
          Object {
            "allowedRoles": Array [
              "admin",
              "editor",
            ],
            "id": "projectDetailsNavBtn",
            "label": <FormattedMessage
              defaultMessage="Project details"
              id="project.view.projectDetails"
              values={Object {}}
            />,
            "to": "/project/100",
            "type": "link_item",
          },
          Object {
            "allowedRoles": Array [
              "admin",
              "editor",
            ],
            "id": "dataSourceNavBtn",
            "label": <FormattedMessage
              defaultMessage="Data Sources"
              id="project.view.projectDataSources"
              values={Object {}}
            />,
            "to": "/project/100/datasource",
            "type": "link_item",
          },
          Object {
            "allowedRoles": Array [
              "admin",
            ],
            "id": "usersNavBtn",
            "label": <FormattedMessage
              defaultMessage="Project Users"
              id="project.view.projectUsersPage"
              values={Object {}}
            />,
            "to": "/project/100/user",
            "type": "link_item",
          },
          Object {
            "allowedRoles": Array [
              "admin",
              "editor",
            ],
            "id": "folderNavBtn",
            "label": <FormattedMessage
              defaultMessage="Pages"
              id="project.view.projectPages"
              values={Object {}}
            />,
            "to": "/project/100/folder",
            "type": "link_item",
          },
        ]
      }
    />
    <ProjectTabs
      active="settings"
      url="/project/100"
    />
    <LoadingWrapper
      error={null}
      loading={false}
      noData={false}
      noDataContent={null}
    >
      <Component />
    </LoadingWrapper>
  </div>
  <NavigationContainer
    fixed={true}
    hideOnDesktop={false}
    right={false}
  >
    <BackArrowButton
      id="backProjectBtn"
      onClick={[Function]}
    />
  </NavigationContainer>
  <Styled(Modal)
    contentLabel="Confirm Removal"
    isOpen={false}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "border": null,
          "borderRadius": "4px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "display": "flex",
          "flexDirection": "column",
          "left": "50%",
          "maxWidth": "600px",
          "outline": "none",
          "overflow": "auto",
          "position": "absolute",
          "right": "10px",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "calc(100% - 20px)",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to delete the project?"
        id="project.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <BackButton
        disabled={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="project.view.cancelRemoval"
          values={Object {}}
        />
      </BackButton>
      <NextButton
        loading={false}
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="project.view.confirmRemoval"
          values={Object {}}
        />
      </NextButton>
    </styled.div>
  </Styled(Modal)>
</styled.div>
`;
