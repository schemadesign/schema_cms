// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View: Component should render correctly 1`] = `
<styled.div>
  <div>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
      title="Project Name"
    />
    <TopHeader
      headerSubtitle="Project Name"
      headerTitle="Project"
      primaryMenuItems={
        Array [
          Object {
            "label": "Data Sources",
            "to": "/project/100/datasource",
          },
        ]
      }
      secondaryMenuItems={
        Array [
          Object {
            "label": "Edit Project Settings",
            "to": "/project/edit/100",
          },
          Object {
            "label": "Delete Project",
            "onClick": [Function],
          },
          Object {
            "label": "Log Out",
            "to": "/logout",
          },
        ]
      }
    />
    <ProjectTabs
      active="settings"
      url="/project/100"
    />
    <styled.div>
      <styled.ul>
        <styled.li
          key="0"
        >
          <Component
            customStyles={
              Object {
                "cursor": "pointer",
              }
            }
            headerComponent={
              <ForwardRef(styled.span)>
                Data Sources
              </ForwardRef(styled.span)>
            }
            id="projectDataSources"
            onClick={[Function]}
          >
            <styled.span
              id="projectDataSourcesValue"
            >
              3
            </styled.span>
          </Component>
        </styled.li>
        <styled.li
          key="1"
        >
          <Component
            customStyles={
              Object {
                "cursor": "pointer",
              }
            }
            headerComponent={
              <ForwardRef(styled.span)>
                Users
              </ForwardRef(styled.span)>
            }
            id="projectUsers"
            onClick={[Function]}
          >
            <styled.span
              id="projectUsersValue"
            >
              2
            </styled.span>
          </Component>
        </styled.li>
      </styled.ul>
      <styled.ul>
        <styled.li
          key="0"
          order={1}
        >
          <styled.div
            id="fieldLastUpdated"
          >
            <styled.span
              id="fieldLastUpdatedLabel"
            >
              Last Update
            </styled.span>
            <styled.span
              id="fieldLastUpdatedValue"
            >
              3 months ago
            </styled.span>
          </styled.div>
        </styled.li>
        <styled.li
          key="1"
          order={3}
        >
          <styled.div
            id="fieldStatus"
          >
            <styled.span
              id="fieldStatusLabel"
            >
              Status
            </styled.span>
            <styled.span
              id="fieldStatusValue"
            >
              Status
            </styled.span>
          </styled.div>
        </styled.li>
        <styled.li
          key="2"
          order={5}
        >
          <styled.div
            id="fieldOwner"
          >
            <styled.span
              id="fieldOwnerLabel"
            >
              Owner
            </styled.span>
            <styled.span
              id="fieldOwnerValue"
            >
              Firstname Lastname
            </styled.span>
          </styled.div>
        </styled.li>
        <styled.li
          key="3"
          order={2}
        >
          <styled.div
            id="fieldTitle"
          >
            <styled.span
              id="fieldTitleLabel"
            >
              Title
            </styled.span>
            <styled.span
              id="fieldTitleValue"
            >
              Project Name
            </styled.span>
          </styled.div>
        </styled.li>
        <styled.li
          key="4"
          order={4}
        >
          <styled.div
            id="fieldDescription"
          >
            <styled.span
              id="fieldDescriptionLabel"
            >
              Description
            </styled.span>
            <styled.span
              id="fieldDescriptionValue"
            >
              Description
            </styled.span>
          </styled.div>
        </styled.li>
        <styled.li
          key="5"
          order={6}
        >
          <styled.div
            id="fieldSlug"
          >
            <styled.span
              id="fieldSlugLabel"
            >
              API
            </styled.span>
            <styled.span
              id="fieldSlugValue"
            >
              schemacms/api/project_title
            </styled.span>
          </styled.div>
        </styled.li>
      </styled.ul>
    </styled.div>
    <styled.div>
      <Styled(Span)
        id="deleteProjectDesktopBtn"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Delete Project"
          id="project.view.deleteProject"
          values={Object {}}
        />
      </Styled(Span)>
    </styled.div>
  </div>
  <NavigationContainer
    hideOnDesktop={false}
    right={false}
  >
    <BackArrowButton
      id="addProjectBtn"
      onClick={[Function]}
    />
  </NavigationContainer>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Confirm Removal"
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.9)",
          "border": null,
          "borderRadius": "4px",
          "bottom": "40px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "color": "FFFFFF",
          "display": "flex",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <FormattedMessage
        defaultMessage="Are you sure you want to delete the project?"
        id="project.view.removeTitle"
        values={Object {}}
      />
    </Styled(H1)>
    <styled.div>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="project.view.cancelRemoval"
          values={Object {}}
        />
      </Styled(Component)>
      <Styled(Component)
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Confirm"
          id="project.view.confirmRemoval"
          values={Object {}}
        />
      </Styled(Component)>
    </styled.div>
  </Modal>
</styled.div>
`;
