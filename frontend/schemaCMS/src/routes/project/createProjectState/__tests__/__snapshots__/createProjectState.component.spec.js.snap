// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProjectState: Component should render correctly 1`] = `
<styled.form
  onSubmit={[Function]}
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="State"
  />
  <MobileMenu
    active="stateNavBtn"
    headerSubtitle={
      <FormattedMessage
        defaultMessage="Create"
        id="createProjectState.title"
        values={Object {}}
      />
    }
    headerTitle={
      <FormattedMessage
        defaultMessage="State"
        id="createProjectState.title"
        values={Object {}}
      />
    }
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="project.view.projectsListPage"
            values={Object {}}
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersPageNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="project.view.usersPage"
            values={Object {}}
          />,
          "to": "/user/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "projectDetailsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project details"
            id="project.view.projectDetails"
            values={Object {}}
          />,
          "to": "/project/projectId",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "dataSourceNavBtn",
          "label": <FormattedMessage
            defaultMessage="Data Sources"
            id="project.view.projectDataSources"
            values={Object {}}
          />,
          "to": "/project/projectId/datasource",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "stateNavBtn",
          "label": <FormattedMessage
            defaultMessage="States"
            id="project.view.states"
            values={Object {}}
          />,
          "to": "/project/projectId/state",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "usersNavBtn",
          "label": <FormattedMessage
            defaultMessage="Project Users"
            id="project.view.projectUsersPage"
            values={Object {}}
          />,
          "to": "/project/projectId/user",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
            "editor",
          ],
          "id": "folderNavBtn",
          "label": <FormattedMessage
            defaultMessage="Pages"
            id="project.view.projectPages"
            values={Object {}}
          />,
          "to": "/project/projectId/folder",
          "type": "link_item",
        },
      ]
    }
  />
  <ProjectTabs
    active="state"
    url="/project/projectId"
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="Create"
        id="createProjectState.title"
        values={Object {}}
      />
    }
    title={
      <FormattedMessage
        defaultMessage="State"
        id="createProjectState.title"
        values={Object {}}
      />
    }
  />
  <LoadingWrapper
    error={null}
    loading={true}
    noData={false}
    noDataContent={null}
  >
    <ProjectStateForm
      dataSources={
        Array [
          Object {
            "id": "id",
            "name": "name",
          },
        ]
      }
      fetchDataSources={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      history={
        Object {
          "goBack": [Function],
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isSubmitting={false}
      isValid={true}
      match={
        Object {
          "params": Object {
            "projectId": "projectId",
          },
        }
      }
      setFieldValue={[Function]}
      state={Object {}}
      userRole="admin"
      values={
        Object {
          "author": "author",
          "created": "10.12.2019",
          "description": "description",
          "isPublic": false,
          "name": "name",
          "project": 1,
        }
      }
    />
  </LoadingWrapper>
  <NavigationContainer
    contentStyles={
      Array [
        "
  display: flex;
  flex-direction: column;
",
      ]
    }
    fixed={true}
    hideOnDesktop={false}
    right={false}
  >
    <styled.div>
      <BackButton
        disabled={false}
        onClick={[Function]}
        type="button"
      />
      <NextButton
        disabled={false}
        loading={false}
        type="submit"
      />
    </styled.div>
    <Component
      activeStep={1}
      steps={3}
    />
  </NavigationContainer>
</styled.form>
`;
