// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`View: Component should not render any step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/view/1/datasource/list",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <form
    onSubmit={[Function]}
  >
    <PillButtons
      leftButtonProps={
        Object {
          "onClick": [Function],
          "title": "Back",
        }
      }
      rightButtonProps={
        Object {
          "disabled": true,
          "onClick": [Function],
          "title": "Next",
        }
      }
    />
    <styled.div>
      <Stepper
        activeStep={0}
        customDotStyles={Object {}}
        customStyles={
          Object {
            "margin": "0 auto",
            "pointerEvents": "none",
          }
        }
        handleStep={[Function]}
        onStepChange={[Function]}
        steps={6}
      />
    </styled.div>
  </form>
</styled.div>
`;

exports[`View: Component should not render content 1`] = `<styled.div />`;

exports[`View: Component should render draft 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="Create Data Source"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/view/1/datasource/list",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <form
    onSubmit={[Function]}
  >
    <Source
      dataSource={Object {}}
      fetchDataSource={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      history={
        Object {
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "1",
          },
        }
      }
      onChange={[Function]}
      removeDataSource={[Function]}
      setFieldValue={[Function]}
      unmountDataSource={[Function]}
      values={
        Object {
          "id": "id",
          "status": "draft",
        }
      }
    />
    <PillButtons
      leftButtonProps={
        Object {
          "onClick": [Function],
          "title": "Cancel",
        }
      }
      rightButtonProps={
        Object {
          "disabled": true,
          "onClick": [Function],
          "title": "Next",
        }
      }
    />
    <styled.div>
      <Stepper
        activeStep={1}
        customDotStyles={Object {}}
        customStyles={
          Object {
            "margin": "0 auto",
            "pointerEvents": "none",
          }
        }
        handleStep={[Function]}
        onStepChange={[Function]}
        steps={6}
      />
    </styled.div>
  </form>
</styled.div>
`;

exports[`View: Component should render second step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/view/1/datasource/list",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <form
    onSubmit={[Function]}
  >
    <Source
      dataSource={Object {}}
      fetchDataSource={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      history={
        Object {
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "1",
          },
        }
      }
      onChange={[Function]}
      removeDataSource={[Function]}
      setFieldValue={[Function]}
      unmountDataSource={[Function]}
      values={
        Object {
          "id": "id",
          "name": "name",
          "step": "2",
        }
      }
    />
    <PillButtons
      leftButtonProps={
        Object {
          "onClick": [Function],
          "title": "Cancel",
        }
      }
      rightButtonProps={
        Object {
          "disabled": true,
          "onClick": [Function],
          "title": "Next",
        }
      }
    />
    <styled.div>
      <Stepper
        activeStep={1}
        customDotStyles={Object {}}
        customStyles={
          Object {
            "margin": "0 auto",
            "pointerEvents": "none",
          }
        }
        handleStep={[Function]}
        onStepChange={[Function]}
        steps={6}
      />
    </styled.div>
  </form>
</styled.div>
`;

exports[`View: Component should render source step 1`] = `
<styled.div>
  <TopHeader
    headerSubtitle="Source"
    headerTitle="name"
    secondaryMenuItems={
      Array [
        Object {
          "label": "Data source list",
          "to": "/project/view/1/datasource/list",
        },
        Object {
          "label": "Remove Data Source",
          "onClick": [Function],
        },
      ]
    }
  />
  <form
    onSubmit={[Function]}
  >
    <Source
      dataSource={Object {}}
      fetchDataSource={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      history={
        Object {
          "push": [Function],
        }
      }
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      match={
        Object {
          "params": Object {
            "dataSourceId": "1",
            "projectId": "1",
            "step": "1",
          },
        }
      }
      onChange={[Function]}
      removeDataSource={[Function]}
      setFieldValue={[Function]}
      unmountDataSource={[Function]}
      values={
        Object {
          "id": "id",
          "name": "name",
        }
      }
    />
    <PillButtons
      leftButtonProps={
        Object {
          "onClick": [Function],
          "title": "Cancel",
        }
      }
      rightButtonProps={
        Object {
          "disabled": true,
          "onClick": [Function],
          "title": "Next",
        }
      }
    />
    <styled.div>
      <Stepper
        activeStep={1}
        customDotStyles={Object {}}
        customStyles={
          Object {
            "margin": "0 auto",
            "pointerEvents": "none",
          }
        }
        handleStep={[Function]}
        onStepChange={[Function]}
        steps={6}
      />
    </styled.div>
  </form>
</styled.div>
`;
