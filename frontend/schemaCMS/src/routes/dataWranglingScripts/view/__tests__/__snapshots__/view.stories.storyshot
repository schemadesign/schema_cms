// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots DataWranglingScripts/View Default 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#000",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="sc-kvZOFW hxJcVs"
  >
    <div
      className="sc-bdVaJa bDWFJH"
    >
      <div
        style={
          Object {
            "alignItems": "flex-start",
            "color": "#FFF",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": "18px 0",
            "width": "100%",
          }
        }
      >
        <div>
          <div
            className="sc-bwzfXH uTxCW"
          >
            <h2
              id="headerTitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 100,
                  "margin": 0,
                }
              }
            >
              Data Wrangling
            </h2>
            <h1
              id="headerSubtitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 600,
                  "letterSpacing": "-0.12px",
                  "lineHight": 1.25,
                  "margin": 0,
                }
              }
            >
              View step
            </h1>
          </div>
        </div>
        <button
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "border": "none",
              "borderRadius": "48px",
              "color": "#FFF",
              "cursor": "pointer",
              "display": "inline-block",
              "fill": "#FFF",
              "fontSize": "18px",
              "margin": "0",
              "minHeight": "48px",
              "outline": "none",
              "padding": "0",
              "position": "absolute",
              "right": 0,
              "top": 6,
            }
          }
        >
          <svg
            style={
              Object {
                "fill": "#FFF",
                "height": "60px",
                "width": "60px",
              }
            }
            viewBox="0 0 60 60"
          >
            <path
              d="M30 37a3 3 0 110 6 3 3 0 010-6zm0-10a3 3 0 110 6 3 3 0 010-6zm0-10a3 3 0 110 6 3 3 0 010-6z"
              fillRule="evenodd"
            />
          </svg>
        </button>
      </div>
      <div
        style={
          Object {
            "backgroundColor": "#000",
            "color": "#FFF",
            "maxWidth": null,
            "minHeight": "100vh",
            "padding": "18px 20px 27px",
            "position": "fixed",
            "right": 0,
            "textAlign": "left",
            "top": 0,
            "transform": "translateX(100%)",
            "transition": "transform 400ms cubic-bezier(0.86, 0, 0.07, 1), visibility 0s linear 400ms",
            "visibility": 0,
            "width": "100%",
            "zIndex": 9999,
          }
        }
      >
        <div
          className="sc-htpNat KtFsv"
        >
          <div
            className="sc-bwzfXH uTxCW"
          >
            <h2
              id="headerTitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 100,
                  "margin": 0,
                }
              }
            >
              Data Wrangling
            </h2>
            <h1
              id="headerSubtitle"
              style={
                Object {
                  "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                  "fontSize": "24px",
                  "fontWeight": 600,
                  "letterSpacing": "-0.12px",
                  "lineHight": 1.25,
                  "margin": 0,
                }
              }
            >
              View step
            </h1>
          </div>
        </div>
        <div
          className="sc-bxivhb fxvYgT"
        >
          <ul
            className="sc-ifAKCX sc-EHOje bVzUGK"
          />
          <ul
            className="sc-ifAKCX sc-bZQynM hRyDTQ"
          />
        </div>
        <button
          id="topHeaderCloseMenuButton"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "border": "none",
              "borderRadius": "48px",
              "color": "#FFF",
              "cursor": "pointer",
              "display": "inline-block",
              "fill": "#FFF",
              "fontSize": "18px",
              "margin": "0",
              "minHeight": "48px",
              "outline": "none",
              "padding": "0",
              "position": "absolute",
              "right": 0,
              "top": "6px",
            }
          }
        >
          <svg
            style={
              Object {
                "fill": "#FFF",
                "height": "60px",
                "width": "60px",
              }
            }
            viewBox="0 0 60 60"
          >
            <path
              d="M39.192 17.98l2.829 2.828L32.828 30l9.193 9.192-2.829 2.829L30 32.828l-9.192 9.193-2.829-2.829L27.172 30l-9.193-9.192 2.829-2.829L30 27.172l9.192-9.193z"
              fillRule="evenodd"
            />
          </svg>
        </button>
      </div>
    </div>
    <form
      className="sc-hqyNC keRCOE"
      name="dataWranglingForm"
    >
      <div
        className="sc-eqIVtm kRufpp"
      >
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "maxWidth": "100%",
              "paddingBottom": "30px",
              "position": "relative",
            }
          }
        >
          <label
            htmlFor="description"
            style={
              Object {
                "border": "none",
                "borderTop": "1px solid #2F2F36",
                "color": "#71737e",
                "display": "block",
                "fontSize": "14px",
                "outline": "none",
                "paddingTop": "8px",
                "width": "100%",
              }
            }
          >
            Description
          </label>
          <input
            disabled={true}
            id="description"
            name="description"
            onChange={[Function]}
            placeholder="Description"
            style={
              Object {
                "backgroundColor": "transparent",
                "border": "none",
                "color": "#FFF",
                "fontSize": "18px",
                "lineHeight": "24px",
                "outline": "none",
                "overflow": "hidden",
                "textOverflow": "ellipsis",
                "whiteSpace": "nowrap",
              }
            }
            type="text"
            value="local:blank_cells.py"
          />
          <div
            style={
              Object {
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </div>
      </div>
      <pre
        style={
          Object {
            "background": "#F0F0F0",
            "color": "#444",
            "display": "block",
            "overflowX": "auto",
            "padding": "0.5em",
          }
        }
      >
        <code>
          
      
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            import
          </span>
           pandas 
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            as
          </span>
           pd
      
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            import
          </span>
           numpy 
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            as
          </span>
           np
      
      
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            """
      Here are some ways to handle blank cells
          1. Fill Blank cells with any value you want
          2. Forward or backward fill the values
          3. Remove rows with Blank cells
      """
          </span>
          
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Sample dataset
          </span>
          
      df = pd.DataFrame(
          [[np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            2
          </span>
          , np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            0
          </span>
          ], [
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            3
          </span>
          , 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            4
          </span>
          , np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            1
          </span>
          ], [np.nan, np.nan, np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            5
          </span>
          ], [np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            3
          </span>
          , np.nan, 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            4
          </span>
          ]],
          columns=list(
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'ABCD'
          </span>
          ),
      )
      
      
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            """
      1. Fill
      """
          </span>
          
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Simple fill for entire dataset
          </span>
          
      fill_value = 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            10
          </span>
          
      df = df.fillna(fill_value)
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Simple fill for specific field
          </span>
          
      column_fill_value = 
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            5
          </span>
          
      df = df[
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            "A"
          </span>
          ].fillna(fill_value, inplace=
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            True
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            """
      2. Forward and Backward fill
      """
          </span>
          
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # forward fill for entire dataset (Fills with previous non-empty value)
          </span>
          
      df = df.fillna(method=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            "ffill"
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # forward fill column specific
          </span>
          
      df = df[
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            "A"
          </span>
          ].fillna(method=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'ffill'
          </span>
          , inplace=
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            True
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # backward fill (Fills with next non-empty value)
          </span>
          
      df = df.fillna(method=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            "bfill"
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # backward fill column specific
          </span>
          
      df = df[
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            "A"
          </span>
          ].fillna(method=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'bfill'
          </span>
          , inplace=
          <span
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            True
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            """
      3. Drop rows
      It is not possible to just drop one blank cell. we would need to drop the whole row or column to
      clean our dataset so there can be two cases of blank cells in rows and columns.
      1. All cells are blank (empty row or column)
      2. One or more cells are blank (partially empty row or column)
      """
          </span>
          
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Empty Rows
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'all'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            0
          </span>
          )
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Empty Columns
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'all'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            1
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Empty Rows (specific column)
          </span>
          
      df = df[
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'A'
          </span>
          ].dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'all'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            0
          </span>
          )
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Empty Columns (specific column)
          </span>
          
      df = df[
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'A'
          </span>
          ].dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'all'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            1
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Partially empty Rows
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'any'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            0
          </span>
          )
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Partially empty Columns
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'any'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            1
          </span>
          )
      
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Partially empty Rows (specific column)
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'any'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            0
          </span>
          )
      
          <span
            style={
              Object {
                "color": "#888888",
              }
            }
          >
            # Partially empty Columns (specific column)
          </span>
          
      df = df.dropna(how=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            'any'
          </span>
          , axis=
          <span
            style={
              Object {
                "color": "#880000",
              }
            }
          >
            1
          </span>
          )
    
        </code>
      </pre>
    </form>
    <div
      className="sc-frDJqD cNUyiv"
    >
      <button
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "#1d1d20",
            "border": "none",
            "borderRadius": "48px",
            "color": "#FFF",
            "cursor": "pointer",
            "display": "inline-block",
            "fill": "#FFF",
            "fontSize": "18px",
            "margin": "0",
            "marginRight": 10,
            "minHeight": "48px",
            "outline": "none",
            "padding": "0",
            "width": "100%",
          }
        }
      >
        Back
      </button>
      <button
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "#1d1d20",
            "border": "none",
            "borderRadius": "48px",
            "color": "#fff",
            "cursor": "pointer",
            "display": "inline-block",
            "fill": "#FFF",
            "fontSize": "18px",
            "margin": "0",
            "minHeight": "48px",
            "outline": "none",
            "padding": "0",
            "width": "100%",
          }
        }
      >
        OK
      </button>
    </div>
  </div>
</div>
`;
