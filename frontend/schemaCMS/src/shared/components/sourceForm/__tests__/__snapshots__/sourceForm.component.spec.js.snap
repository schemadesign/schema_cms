// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SourceFormComponent: Component should render correctly 1`] = `
<Fragment>
  <TextInput
    autoWidth={false}
    checkOnlyErrors={false}
    errors={Object {}}
    fullWidth={true}
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isEdit={true}
    jobsState={
      Object {
        "lastJobStatus": "success",
      }
    }
    label="Name"
    name="name"
    onChange={[Function]}
    theme={
      Object {
        "accordion": Object {
          "background": "#000",
          "border": "#FFF",
        },
        "background": "#000",
        "border": "#2F2F36",
        "breadcrumbs": Object {
          "border": "#a6a7aa",
          "link": "#a6a7aa",
          "separator": "#a6a7aa",
        },
        "button": Object {
          "background": "#1d1d20",
          "text": "#FFF",
        },
        "buttonDisabled": Object {
          "background": "#1d1d20",
          "text": "#71737e",
        },
        "card": Object {
          "background": "#1d1d20",
          "border": "#FFF",
          "label": "#71737e",
          "text": "#FFF",
        },
        "checkbox": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "colors": Object {
          "black": "#000",
          "coolGray": "#a6a7aa",
          "darkGrey": "#1d1d20",
          "lightGrey": "#71737e",
          "mediumGray": "#2F2F36",
          "red": "#f21e29",
          "veryLightPink": "#f0efef",
          "white": "#FFF",
          "yellow": "#be8f00",
        },
        "dataGrid": Object {
          "background": "#000",
          "text": "#71737e",
        },
        "error": "#f21e29",
        "header": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "hiddenBackground": "rgba(0, 0, 0, 0)",
        "icon": Object {
          "background": "#1d1d20",
          "fill": "#FFF",
          "fillInverse": "#000",
        },
        "input": Object {
          "text": "#FFF",
        },
        "inverseButton": Object {
          "background": "#FFF",
          "text": "#000",
        },
        "label": Object {
          "border": "#2F2F36",
          "text": "#71737e",
        },
        "link": Object {
          "hover": "#FFF",
          "text": "#a6a7aa",
        },
        "linkItem": Object {
          "hover": "#FFF",
          "link": "#a6a7aa",
        },
        "menu": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "providerContainer": Object {
          "minHeight": "100vh",
        },
        "radioButton": Object {
          "active": Object {
            "background": "#FFF",
            "fill": "#1d1d20",
          },
          "border": "#FFF",
          "text": "#FFF",
          "unActive": Object {
            "background": "#1d1d20",
            "dot": "#FFF",
            "fill": "#FFF",
          },
        },
        "secondaryText": "#71737e",
        "select": Object {
          "background": "#1d1d20",
          "border": "#2F2F36",
        },
        "slider": Object {
          "background": "#1d1d20",
          "selectedBackground": "#71737e",
          "thumb": "#FFF",
        },
        "stepper": Object {
          "active": "#FFF",
          "background": "#1d1d20",
        },
        "switch": Object {
          "background": "#2F2F36",
          "backgroundActive": "#71737e",
          "circle": "#FFF",
        },
        "tab": Object {
          "active": "#FFF",
          "hover": "#FFF",
          "normal": "#2F2F36",
        },
        "table": Object {
          "background": Object {
            "body": "#000",
            "header": "#1d1d20",
          },
          "border": Object {
            "body": "#1d1d20",
            "header": "#000",
          },
          "text": Object {
            "body": "#FFF",
            "header": "#71737e",
          },
        },
        "text": "#FFF",
        "textArea": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "textField": Object {
          "error": "#f21e29",
          "label": "#71737e",
        },
        "typography": Object {
          "h1": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 600,
          },
          "h2": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 100,
          },
          "h3": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 600,
          },
          "p": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 200,
          },
          "pre": Object {
            "fontFamily": "Hack, monospace",
            "fontSize": "18px",
          },
          "span": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "14px",
          },
        },
        "warning": "#be8f00",
      }
    }
    touched={Object {}}
    validateForm={[Function]}
    value="name"
  />
  <Component
    customStyles={
      Object {
        "marginBottom": 20,
      }
    }
  >
    <MemoizedFormattedMessage
      defaultMessage="Source Type"
      id="shared.components.sourceForm.source"
    />
  </Component>
  <RadioGroup
    customCheckedStyles={Object {}}
    customLabelStyles={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
        "width": 96,
      }
    }
    customStyles={
      Object {
        "marginBottom": "40px",
      }
    }
    name="type"
    onChange={[Function]}
    value="file"
  >
    <styled.div>
      <RadioBaseComponent
        id="file"
        label="CSV"
        value="file"
      >
        <Component
          customStyles={
            Object {
              "background": "#FFF",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="csvUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#1d1d20",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
    <styled.div>
      <RadioBaseComponent
        id="google_sheet"
        label="Spreadsheet"
        value="google_sheet"
      >
        <Component
          customStyles={
            Object {
              "background": "#1d1d20",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="googleSpreadsheetUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#FFF",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
    <styled.div>
      <RadioBaseComponent
        id="api"
        label="API"
        value="api"
      >
        <Component
          customStyles={
            Object {
              "background": "#1d1d20",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="apiSourceUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#FFF",
                "height": "70px",
                "width": "70px",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
  </RadioGroup>
  <Uploader
    accept=".csv"
    checkOnlyErrors={true}
    disabled={false}
    errors={Object {}}
    fileNames="fileName"
    id="fileUpload"
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isRemovable={false}
    jobsState={
      Object {
        "lastJobStatus": "success",
      }
    }
    label="File Name"
    name="file"
    onChange={[Function]}
    placeholder="Select file or Drag and Drop it here"
    theme={
      Object {
        "accordion": Object {
          "background": "#000",
          "border": "#FFF",
        },
        "background": "#000",
        "border": "#2F2F36",
        "breadcrumbs": Object {
          "border": "#a6a7aa",
          "link": "#a6a7aa",
          "separator": "#a6a7aa",
        },
        "button": Object {
          "background": "#1d1d20",
          "text": "#FFF",
        },
        "buttonDisabled": Object {
          "background": "#1d1d20",
          "text": "#71737e",
        },
        "card": Object {
          "background": "#1d1d20",
          "border": "#FFF",
          "label": "#71737e",
          "text": "#FFF",
        },
        "checkbox": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "colors": Object {
          "black": "#000",
          "coolGray": "#a6a7aa",
          "darkGrey": "#1d1d20",
          "lightGrey": "#71737e",
          "mediumGray": "#2F2F36",
          "red": "#f21e29",
          "veryLightPink": "#f0efef",
          "white": "#FFF",
          "yellow": "#be8f00",
        },
        "dataGrid": Object {
          "background": "#000",
          "text": "#71737e",
        },
        "error": "#f21e29",
        "header": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "hiddenBackground": "rgba(0, 0, 0, 0)",
        "icon": Object {
          "background": "#1d1d20",
          "fill": "#FFF",
          "fillInverse": "#000",
        },
        "input": Object {
          "text": "#FFF",
        },
        "inverseButton": Object {
          "background": "#FFF",
          "text": "#000",
        },
        "label": Object {
          "border": "#2F2F36",
          "text": "#71737e",
        },
        "link": Object {
          "hover": "#FFF",
          "text": "#a6a7aa",
        },
        "linkItem": Object {
          "hover": "#FFF",
          "link": "#a6a7aa",
        },
        "menu": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "providerContainer": Object {
          "minHeight": "100vh",
        },
        "radioButton": Object {
          "active": Object {
            "background": "#FFF",
            "fill": "#1d1d20",
          },
          "border": "#FFF",
          "text": "#FFF",
          "unActive": Object {
            "background": "#1d1d20",
            "dot": "#FFF",
            "fill": "#FFF",
          },
        },
        "secondaryText": "#71737e",
        "select": Object {
          "background": "#1d1d20",
          "border": "#2F2F36",
        },
        "slider": Object {
          "background": "#1d1d20",
          "selectedBackground": "#71737e",
          "thumb": "#FFF",
        },
        "stepper": Object {
          "active": "#FFF",
          "background": "#1d1d20",
        },
        "switch": Object {
          "background": "#2F2F36",
          "backgroundActive": "#71737e",
          "circle": "#FFF",
        },
        "tab": Object {
          "active": "#FFF",
          "hover": "#FFF",
          "normal": "#2F2F36",
        },
        "table": Object {
          "background": Object {
            "body": "#000",
            "header": "#1d1d20",
          },
          "border": Object {
            "body": "#1d1d20",
            "header": "#000",
          },
          "text": Object {
            "body": "#FFF",
            "header": "#71737e",
          },
        },
        "text": "#FFF",
        "textArea": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "textField": Object {
          "error": "#f21e29",
          "label": "#71737e",
        },
        "typography": Object {
          "h1": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 600,
          },
          "h2": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 100,
          },
          "h3": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 600,
          },
          "p": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 200,
          },
          "pre": Object {
            "fontFamily": "Hack, monospace",
            "fontSize": "18px",
          },
          "span": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "14px",
          },
        },
        "warning": "#be8f00",
      }
    }
    touched={Object {}}
    type="file"
    validateForm={[Function]}
  />
  <Styled(Modal)
    contentLabel="Confirm Run Last Job"
    isOpen={false}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "border": null,
          "borderRadius": "4px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "display": "flex",
          "flexDirection": "column",
          "left": "50%",
          "maxWidth": "600px",
          "outline": "none",
          "overflow": "auto",
          "position": "absolute",
          "right": "10px",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "calc(100% - 20px)",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <MemoizedFormattedMessage
        defaultMessage="Re-importing could change the current values. Are you sure you want to proceed? "
        id="shared.components.sourceForm.reimportTitle"
      />
    </Styled(H1)>
    <styled.div>
      <BackButton
        disabled={false}
        id="declineRunLastJob"
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Cancel"
          id="shared.components.sourceForm.cancelReimport"
        />
      </BackButton>
      <NextButton
        id="confirmRunLastJob"
        loading={false}
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Yes"
          id="shared.components.sourceForm.confirmReimport"
        />
      </NextButton>
    </styled.div>
  </Styled(Modal)>
</Fragment>
`;

exports[`SourceFormComponent: Component should render error wrapper 1`] = `
<styled.div>
  <MemoizedFormattedMessage
    defaultMessage="Uploading file failed. Please try again."
    id="shared.components.sourceForm.uploadingError"
  />
</styled.div>
`;

exports[`SourceFormComponent: Component should render file uploader 1`] = `
<Fragment>
  <TextInput
    autoWidth={false}
    checkOnlyErrors={false}
    errors={Object {}}
    fullWidth={true}
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isEdit={true}
    jobsState={
      Object {
        "lastJobStatus": "success",
      }
    }
    label="Name"
    name="name"
    onChange={[Function]}
    theme={
      Object {
        "accordion": Object {
          "background": "#000",
          "border": "#FFF",
        },
        "background": "#000",
        "border": "#2F2F36",
        "breadcrumbs": Object {
          "border": "#a6a7aa",
          "link": "#a6a7aa",
          "separator": "#a6a7aa",
        },
        "button": Object {
          "background": "#1d1d20",
          "text": "#FFF",
        },
        "buttonDisabled": Object {
          "background": "#1d1d20",
          "text": "#71737e",
        },
        "card": Object {
          "background": "#1d1d20",
          "border": "#FFF",
          "label": "#71737e",
          "text": "#FFF",
        },
        "checkbox": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "colors": Object {
          "black": "#000",
          "coolGray": "#a6a7aa",
          "darkGrey": "#1d1d20",
          "lightGrey": "#71737e",
          "mediumGray": "#2F2F36",
          "red": "#f21e29",
          "veryLightPink": "#f0efef",
          "white": "#FFF",
          "yellow": "#be8f00",
        },
        "dataGrid": Object {
          "background": "#000",
          "text": "#71737e",
        },
        "error": "#f21e29",
        "header": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "hiddenBackground": "rgba(0, 0, 0, 0)",
        "icon": Object {
          "background": "#1d1d20",
          "fill": "#FFF",
          "fillInverse": "#000",
        },
        "input": Object {
          "text": "#FFF",
        },
        "inverseButton": Object {
          "background": "#FFF",
          "text": "#000",
        },
        "label": Object {
          "border": "#2F2F36",
          "text": "#71737e",
        },
        "link": Object {
          "hover": "#FFF",
          "text": "#a6a7aa",
        },
        "linkItem": Object {
          "hover": "#FFF",
          "link": "#a6a7aa",
        },
        "menu": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "providerContainer": Object {
          "minHeight": "100vh",
        },
        "radioButton": Object {
          "active": Object {
            "background": "#FFF",
            "fill": "#1d1d20",
          },
          "border": "#FFF",
          "text": "#FFF",
          "unActive": Object {
            "background": "#1d1d20",
            "dot": "#FFF",
            "fill": "#FFF",
          },
        },
        "secondaryText": "#71737e",
        "select": Object {
          "background": "#1d1d20",
          "border": "#2F2F36",
        },
        "slider": Object {
          "background": "#1d1d20",
          "selectedBackground": "#71737e",
          "thumb": "#FFF",
        },
        "stepper": Object {
          "active": "#FFF",
          "background": "#1d1d20",
        },
        "switch": Object {
          "background": "#2F2F36",
          "backgroundActive": "#71737e",
          "circle": "#FFF",
        },
        "tab": Object {
          "active": "#FFF",
          "hover": "#FFF",
          "normal": "#2F2F36",
        },
        "table": Object {
          "background": Object {
            "body": "#000",
            "header": "#1d1d20",
          },
          "border": Object {
            "body": "#1d1d20",
            "header": "#000",
          },
          "text": Object {
            "body": "#FFF",
            "header": "#71737e",
          },
        },
        "text": "#FFF",
        "textArea": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "textField": Object {
          "error": "#f21e29",
          "label": "#71737e",
        },
        "typography": Object {
          "h1": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 600,
          },
          "h2": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 100,
          },
          "h3": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 600,
          },
          "p": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 200,
          },
          "pre": Object {
            "fontFamily": "Hack, monospace",
            "fontSize": "18px",
          },
          "span": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "14px",
          },
        },
        "warning": "#be8f00",
      }
    }
    touched={Object {}}
    validateForm={[Function]}
    value="name"
  />
  <Component
    customStyles={
      Object {
        "marginBottom": 20,
      }
    }
  >
    <MemoizedFormattedMessage
      defaultMessage="Source Type"
      id="shared.components.sourceForm.source"
    />
  </Component>
  <RadioGroup
    customCheckedStyles={Object {}}
    customLabelStyles={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
        "width": 96,
      }
    }
    customStyles={
      Object {
        "marginBottom": "40px",
      }
    }
    name="type"
    onChange={[Function]}
    value="file"
  >
    <styled.div>
      <RadioBaseComponent
        id="file"
        label="CSV"
        value="file"
      >
        <Component
          customStyles={
            Object {
              "background": "#FFF",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="csvUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#1d1d20",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
    <styled.div>
      <RadioBaseComponent
        id="google_sheet"
        label="Spreadsheet"
        value="google_sheet"
      >
        <Component
          customStyles={
            Object {
              "background": "#1d1d20",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="googleSpreadsheetUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#FFF",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
    <styled.div>
      <RadioBaseComponent
        id="api"
        label="API"
        value="api"
      >
        <Component
          customStyles={
            Object {
              "background": "#1d1d20",
              "height": 96,
              "marginBottom": 10,
              "pointerEvents": "none",
              "width": 96,
            }
          }
          id="apiSourceUploadIcon"
          type="button"
        >
          <Component
            customStyles={
              Object {
                "fill": "#FFF",
                "height": "70px",
                "width": "70px",
              }
            }
          />
        </Component>
      </RadioBaseComponent>
    </styled.div>
  </RadioGroup>
  <Uploader
    accept=".csv"
    checkOnlyErrors={true}
    disabled={false}
    errors={Object {}}
    fileNames="fileName"
    id="fileUpload"
    intl={
      Object {
        "formatMessage": [Function],
      }
    }
    isRemovable={false}
    jobsState={
      Object {
        "lastJobStatus": "success",
      }
    }
    label="File Name"
    name="file"
    onChange={[Function]}
    placeholder="Select file or Drag and Drop it here"
    theme={
      Object {
        "accordion": Object {
          "background": "#000",
          "border": "#FFF",
        },
        "background": "#000",
        "border": "#2F2F36",
        "breadcrumbs": Object {
          "border": "#a6a7aa",
          "link": "#a6a7aa",
          "separator": "#a6a7aa",
        },
        "button": Object {
          "background": "#1d1d20",
          "text": "#FFF",
        },
        "buttonDisabled": Object {
          "background": "#1d1d20",
          "text": "#71737e",
        },
        "card": Object {
          "background": "#1d1d20",
          "border": "#FFF",
          "label": "#71737e",
          "text": "#FFF",
        },
        "checkbox": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "colors": Object {
          "black": "#000",
          "coolGray": "#a6a7aa",
          "darkGrey": "#1d1d20",
          "lightGrey": "#71737e",
          "mediumGray": "#2F2F36",
          "red": "#f21e29",
          "veryLightPink": "#f0efef",
          "white": "#FFF",
          "yellow": "#be8f00",
        },
        "dataGrid": Object {
          "background": "#000",
          "text": "#71737e",
        },
        "error": "#f21e29",
        "header": Object {
          "border": "#2F2F36",
          "text": "#FFF",
        },
        "hiddenBackground": "rgba(0, 0, 0, 0)",
        "icon": Object {
          "background": "#1d1d20",
          "fill": "#FFF",
          "fillInverse": "#000",
        },
        "input": Object {
          "text": "#FFF",
        },
        "inverseButton": Object {
          "background": "#FFF",
          "text": "#000",
        },
        "label": Object {
          "border": "#2F2F36",
          "text": "#71737e",
        },
        "link": Object {
          "hover": "#FFF",
          "text": "#a6a7aa",
        },
        "linkItem": Object {
          "hover": "#FFF",
          "link": "#a6a7aa",
        },
        "menu": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "providerContainer": Object {
          "minHeight": "100vh",
        },
        "radioButton": Object {
          "active": Object {
            "background": "#FFF",
            "fill": "#1d1d20",
          },
          "border": "#FFF",
          "text": "#FFF",
          "unActive": Object {
            "background": "#1d1d20",
            "dot": "#FFF",
            "fill": "#FFF",
          },
        },
        "secondaryText": "#71737e",
        "select": Object {
          "background": "#1d1d20",
          "border": "#2F2F36",
        },
        "slider": Object {
          "background": "#1d1d20",
          "selectedBackground": "#71737e",
          "thumb": "#FFF",
        },
        "stepper": Object {
          "active": "#FFF",
          "background": "#1d1d20",
        },
        "switch": Object {
          "background": "#2F2F36",
          "backgroundActive": "#71737e",
          "circle": "#FFF",
        },
        "tab": Object {
          "active": "#FFF",
          "hover": "#FFF",
          "normal": "#2F2F36",
        },
        "table": Object {
          "background": Object {
            "body": "#000",
            "header": "#1d1d20",
          },
          "border": Object {
            "body": "#1d1d20",
            "header": "#000",
          },
          "text": Object {
            "body": "#FFF",
            "header": "#71737e",
          },
        },
        "text": "#FFF",
        "textArea": Object {
          "background": "#000",
          "text": "#FFF",
        },
        "textField": Object {
          "error": "#f21e29",
          "label": "#71737e",
        },
        "typography": Object {
          "h1": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 600,
          },
          "h2": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "24px",
            "fontWeight": 100,
          },
          "h3": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 600,
          },
          "p": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "18px",
            "fontWeight": 200,
          },
          "pre": Object {
            "fontFamily": "Hack, monospace",
            "fontSize": "18px",
          },
          "span": Object {
            "fontFamily": "Inter, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": "14px",
          },
        },
        "warning": "#be8f00",
      }
    }
    touched={Object {}}
    type="file"
    validateForm={[Function]}
  />
  <Styled(Modal)
    contentLabel="Confirm Run Last Job"
    isOpen={false}
    style={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "alignItems": "center",
          "border": null,
          "borderRadius": "4px",
          "boxShadow": "0 4px 8px 0 rgba(0, 0, 0, 0.5)",
          "display": "flex",
          "flexDirection": "column",
          "left": "50%",
          "maxWidth": "600px",
          "outline": "none",
          "overflow": "auto",
          "position": "absolute",
          "right": "10px",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "calc(100% - 20px)",
        },
        "overlay": Object {
          "backgroundColor": "rgba(29, 29, 32, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
          "zIndex": 10000,
        },
      }
    }
  >
    <Styled(H1)>
      <MemoizedFormattedMessage
        defaultMessage="Re-importing could change the current values. Are you sure you want to proceed? "
        id="shared.components.sourceForm.reimportTitle"
      />
    </Styled(H1)>
    <styled.div>
      <BackButton
        disabled={false}
        id="declineRunLastJob"
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Cancel"
          id="shared.components.sourceForm.cancelReimport"
        />
      </BackButton>
      <NextButton
        id="confirmRunLastJob"
        loading={false}
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Yes"
          id="shared.components.sourceForm.confirmReimport"
        />
      </NextButton>
    </styled.div>
  </Styled(Modal)>
</Fragment>
`;

exports[`SourceFormComponent: Component should render warning wrapper with job ongoing 1`] = `
<styled.div>
  <MemoizedFormattedMessage
    defaultMessage="There is a script processing ongoing. Please wait until it finishes to try and upload a new file."
    id="shared.components.sourceForm.processing"
  />
</styled.div>
`;

exports[`SourceFormComponent: Component should render warning wrapper with uploading file 1`] = `
<styled.div>
  <MemoizedFormattedMessage
    defaultMessage="Uploading file in progress..."
    id="shared.components.sourceForm.uploadingFile"
  />
</styled.div>
`;
