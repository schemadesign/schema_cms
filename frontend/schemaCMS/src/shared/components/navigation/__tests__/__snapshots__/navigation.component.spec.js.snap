// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation: Component should render BackArrowButton 1`] = `
<Component
  customStyles={
    Object {
      "height": "60px",
      "width": "60px",
    }
  }
  onClick={[Function]}
>
  <Component />
</Component>
`;

exports[`Navigation: Component should render BackButton 1`] = `
<Styled(Component)
  disabled={false}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Back"
    id="shared.components.navigation.back"
    values={Object {}}
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render BackButton with custom children 1`] = `
<Styled(Component)
  disabled={false}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="{loading, select, true {Loading...} other {Next}}"
    id="shared.components.navigation.next"
    values={Object {}}
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render NavigationContainer 1`] = `
<styled.div>
  <styled.div>
    <styled.div
      hideOnDesktop={false}
      right={false}
    >
      <NextButton
        loading={false}
      />
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`Navigation: Component should render NextButton 1`] = `
<Styled(Component)
  inverse={true}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="{loading, select, true {Loading...} other {Next}}"
    id="shared.components.navigation.next"
    values={
      Object {
        "loading": false,
      }
    }
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render NextButton with custom children 1`] = `
<Styled(Component)
  inverse={true}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Back"
    id="shared.components.navigation.back"
    values={Object {}}
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render PlusButton 1`] = `
<styled.div
  hideOnDesktop={false}
>
  <Component
    customStyles={
      Object {
        "height": "60px",
        "width": "60px",
      }
    }
    inverse={true}
    onClick={[Function]}
  >
    <Component
      inverse={true}
    />
  </Component>
</styled.div>
`;
