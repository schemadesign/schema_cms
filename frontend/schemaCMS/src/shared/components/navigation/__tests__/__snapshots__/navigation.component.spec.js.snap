// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation: Component should render BackButton 1`] = `
<Styled(Component)
  disabled={false}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Back"
    id="shared.components.navigation.back"
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render BackButton with custom children 1`] = `
<Styled(Component)
  disabled={false}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Next"
    id="shared.components.navigation.next"
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render BackLink with custom children 1`] = `
.c0 {
  width: calc(50% - 5px);
  max-width: 240px;
  background-color: #1d1d20;
  color: #FFF;
  border-radius: 30px;
  text-align: center;
  line-height: 30px;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 20px;
  padding: 9px 0;
}

@media (min-width:1050px) {
  .c0 {
    width: 240px;
  }
}

<a
  className="c0"
  disabled={false}
  href="/toUrl"
  onClick={[Function]}
>
  Next
</a>
`;

exports[`Navigation: Component should render NavigationContainer 1`] = `
<styled.div>
  <styled.div
    fixed={false}
  >
    <styled.div
      contentStyles={null}
      hideOnDesktop={false}
      right={false}
    >
      <NextButton
        loading={false}
      />
    </styled.div>
  </styled.div>
</styled.div>
`;

exports[`Navigation: Component should render NextButton 1`] = `
<Styled(Component)
  inverse={true}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Next"
    id="shared.components.navigation.next"
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render NextButton with custom children 1`] = `
<Styled(Component)
  inverse={true}
  onClick={[Function]}
>
  <FormattedMessage
    defaultMessage="Back"
    id="shared.components.navigation.back"
  />
</Styled(Component)>
`;

exports[`Navigation: Component should render PlusButton 1`] = `
<styled.div
  hideOnDesktop={false}
>
  <Component
    customStyles={
      Object {
        "height": "60px",
        "width": "60px",
      }
    }
    inverse={true}
    onClick={[Function]}
  >
    <Component
      customStyles={Object {}}
      inverse={true}
    />
  </Component>
</styled.div>
`;

exports[`Navigation: Component should render PlusLink with custom children 1`] = `
.c0 {
  background-color: #FFF;
  width: 60px;
  height: 60px;
  display: inline-block;
  border-radius: 50%;
}

@media (min-width:1050px) {
  .c0 {
    display: inline-block;
  }
}

<a
  className="c0"
  href="/toUrl"
  onClick={[Function]}
>
  <svg
    id=""
    style={
      Object {
        "fill": "#000",
        "height": 60,
        "shapeRendering": "crispEdges",
        "width": 60,
      }
    }
    viewBox="0 0 60 60"
  >
    <path
      d="M32 15v13h13v4H32v13h-4V32H15v-4h13V15h4z"
    />
  </svg>
</a>
`;
