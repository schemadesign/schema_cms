// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots BlockPage Default 1`] = `
.c2 {
  position: relative;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  max-width: calc(100% - 90px);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  color: #71737e;
  max-width: 100px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: none;
}

@media (min-width:1050px) {
  .c0 {
    max-width: calc(100% - 210px);
  }
}

@media (min-width:1050px) {
  .c3 {
    display: block;
  }
}

<div
  style={
    Object {
      "minHeight": "100vh",
    }
  }
>
  <style>
    
  body {
    color: #FFF;
    background-color: #000;
  }

  </style>
  <div
    style={
      Object {
        "borderTop": "2px solid #FFF",
        "overflow": "hidden",
        "position": "relative",
        "width": "100%",
      }
    }
  >
    <div
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": 60,
          "paddingRight": 40,
          "position": "relative",
        }
      }
    >
      <div
        className="c0"
      >
        <div
          className="c1"
        >
          <div>
            icon
          </div>
        </div>
        <div
          className="c2"
        >
          <div
            style={
              Object {
                "display": "flex",
                "flexDirection": "column",
                "maxWidth": "100%",
                "paddingBottom": 0,
                "position": "relative",
              }
            }
          >
            <input
              id="blocks.0.name"
              name="blocks.0.name"
              onChange={[Function]}
              placeholder="Name"
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "#FFF",
                  "fontFamily": "inherit",
                  "fontSize": "18px",
                  "fontWeight": "inherit",
                  "letterSpacing": "normal",
                  "lineHeight": "24px",
                  "maxWidth": "100%",
                  "minWidth": 60,
                  "outline": "none",
                  "padding": 0,
                  "width": 80,
                }
              }
              type="text"
              value="name"
            />
            <div
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "#FFF",
                  "fontFamily": "inherit",
                  "fontSize": "18px",
                  "fontWeight": "inherit",
                  "letterSpacing": "normal",
                  "lineHeight": "24px",
                  "maxWidth": "100%",
                  "minWidth": 60,
                  "opacity": 0,
                  "outline": "none",
                  "padding": 0,
                  "position": "fixed",
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              name
            </div>
            <div
              style={
                Object {
                  "position": "absolute",
                  "right": 0,
                  "top": 2,
                }
              }
            />
          </div>
        </div>
        <div
          className="c1"
        >
          <svg
            style={
              Object {
                "fill": "#FFF",
                "height": "30px",
                "width": "30px",
              }
            }
            viewBox="0 0 30 30"
          >
            <path
              d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
              fillRule="evenodd"
            />
          </svg>
          <svg
            id="removeBlock-0"
            onClick={[Function]}
            style={
              Object {
                "cursor": "pointer",
                "fill": "#FFF",
                "height": 30,
                "shapeRendering": "crispEdges",
                "width": 30,
              }
            }
            viewBox="0 0 60 60"
          >
            <path
              d="M15 28h30v4H15z"
            />
          </svg>
        </div>
      </div>
      <div
        className="c3"
      >
        type
      </div>
      <div
        onClick={[Function]}
        style={
          Object {
            "cursor": "pointer",
            "fontSize": 0,
            "position": "absolute",
            "right": 0,
            "top": 9,
            "transform": "rotate(0deg)",
            "transformOrigin": "center center",
            "transition": "transform 200ms ease-in-out",
          }
        }
      />
    </div>
    <div
      style={
        Object {
          "backgroundColor": "#000",
          "height": 0,
          "transition": "height 200ms linear, overflow 0s linear 200ms",
        }
      }
    >
      <div>
        elements
      </div>
    </div>
  </div>
</div>
`;
