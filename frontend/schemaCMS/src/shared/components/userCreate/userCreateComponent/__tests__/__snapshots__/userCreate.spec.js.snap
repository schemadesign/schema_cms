// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserCreate: Component should render correctly 1`] = `
<styled.div>
  <MobileMenu
    headerSubtitle={
      <FormattedMessage
        defaultMessage="You are adding {user} to {project}"
        id="userCreate.addUser"
        values={
          Object {
            "project": "",
            "user": "",
          }
        }
      />
    }
    headerTitle={
      <FormattedMessage
        defaultMessage="Users"
        id="userCreate.pageTitle"
      />
    }
    options={
      Array [
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "projectsNavBtn",
          "label": <FormattedMessage
            defaultMessage="Projects"
            id="user.projectsListPage"
          />,
          "to": "/project/",
          "type": "link_item",
        },
        Object {
          "allowedRoles": Array [
            "admin",
          ],
          "id": "userNavBtn",
          "label": <FormattedMessage
            defaultMessage="Users"
            id="user.userPage"
          />,
          "to": "/user/",
          "type": "link_item",
        },
      ]
    }
  />
  <ContextHeader
    subtitle={
      <FormattedMessage
        defaultMessage="You are adding {user} to {project}"
        id="userCreate.addUser"
        values={
          Object {
            "project": "",
            "user": "",
          }
        }
      />
    }
    title={
      <FormattedMessage
        defaultMessage="Users"
        id="userCreate.pageTitle"
      />
    }
  />
  <styled.form
    onSubmit={[Function]}
  >
    <TextInput
      autoWidth={false}
      cancelUrl="cancelUrl"
      checkOnlyErrors={false}
      disabled={true}
      errors={Object {}}
      fullWidth={true}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isEdit={false}
      isSubmitting={false}
      isValid={true}
      label="Name"
      name="firstName"
      onChange={[Function]}
      setFieldValue={[Function]}
      touched={Object {}}
      values={Object {}}
    />
    <TextInput
      autoWidth={false}
      cancelUrl="cancelUrl"
      checkOnlyErrors={false}
      disabled={true}
      errors={Object {}}
      fullWidth={true}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleSubmit={[Function]}
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isEdit={false}
      isSubmitting={false}
      isValid={true}
      label="Last name"
      name="lastName"
      onChange={[Function]}
      setFieldValue={[Function]}
      touched={Object {}}
      values={Object {}}
    />
    <TextInput
      autoWidth={false}
      checkOnlyErrors={false}
      disabled={true}
      errors={Object {}}
      fullWidth={true}
      isEdit={false}
      label="Email"
      name="email"
      onChange={[Function]}
      touched={Object {}}
    />
    <TextInput
      autoWidth={false}
      checkOnlyErrors={false}
      disabled={true}
      errors={Object {}}
      fullWidth={true}
      isEdit={false}
      label="Role"
      name="role"
      onChange={[Function]}
      touched={Object {}}
    />
    <NavigationContainer
      contentStyles={null}
      fixed={true}
      hideOnDesktop={false}
      right={false}
    >
      <BackLink
        id="inviteUserBackBtn"
        to="cancelUrl"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          id="userCreate.cancel"
        />
      </BackLink>
      <NextButton
        disabled={false}
        id="inviteUserSubmitBtn"
        loading={false}
        type="submit"
      >
        <FormattedMessage
          defaultMessage="Add"
          id="userCreate.add"
        />
      </NextButton>
    </NavigationContainer>
  </styled.form>
</styled.div>
`;
