// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSourceStateForm: Component should render correctly 1`] = `
.c0 {
  padding-bottom: 50px;
}

.c1 {
  position: relative;
}

.c2 {
  margin-top: 0;
}

.c3 {
  position: relative;
  top: 0;
  left: 0;
  color: #f21e29;
  font-size: 14px;
  font-weight: normal;
}

.c4 {
  padding-bottom: 30px;
}

.c6 {
  font-size: 15px;
  padding: 20px 0 5px;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
  overflow: hidden;
}

.c7 {
  color: #71737e;
}

.c5 {
  margin-top: 10px;
  padding: 0 20px 20px;
}

.c8 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
}

.c9 {
  margin-top: 30px;
  border-top: 2px solid #2F2F36;
  padding-top: 15px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-bottom: 15px;
  position: relative;
}

.c13 {
  padding-right: 10px;
}

.c12 {
  padding-left: 10px;
  max-width: 100%;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 100%;
  padding-right: 10px;
}

.c14 {
  color: #71737e;
  min-width: 100%;
}

@media (min-width:1050px) {
  .c2 {
    margin-top: 0;
  }
}

@media (min-width:480px) {
  .c10 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media (min-width:480px) {
  .c11 {
    padding-right: 40px;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "maxWidth": "100%",
          "paddingBottom": "30px",
          "position": "relative",
        }
      }
    >
      <label
        htmlFor="name"
        style={
          Object {
            "border": "none",
            "borderTop": "2px solid #2F2F36",
            "color": "#71737e",
            "display": "block",
            "fontSize": "14px",
            "outline": "none",
            "paddingTop": "8px",
            "width": "100%",
          }
        }
      >
        Name
      </label>
      <input
        id="name"
        name="name"
        onChange={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "border": "none",
            "color": "#FFF",
            "fontFamily": "inherit",
            "fontSize": "18px",
            "fontWeight": "inherit",
            "letterSpacing": "normal",
            "lineHeight": "24px",
            "maxWidth": "100%",
            "minWidth": 60,
            "outline": "none",
            "padding": 0,
          }
        }
        type="text"
        value="name"
      />
      <div
        style={
          Object {
            "position": "absolute",
            "right": 0,
            "top": 2,
          }
        }
      >
        <label
          htmlFor="name"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          <div
            className="c2"
          >
            <svg
              style={
                Object {
                  "fill": "#FFF",
                  "height": "30px",
                  "width": "30px",
                }
              }
              viewBox="0 0 30 30"
            >
              <path
                d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                fillRule="evenodd"
              />
            </svg>
          </div>
        </label>
      </div>
    </div>
    <div
      className="c3"
      id="nameError"
    />
  </div>
  <div
    className="c1"
  >
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "maxWidth": "100%",
          "paddingBottom": "30px",
          "position": "relative",
        }
      }
    >
      <label
        htmlFor="description"
        style={
          Object {
            "border": "none",
            "borderTop": "2px solid #2F2F36",
            "color": "#71737e",
            "display": "block",
            "fontSize": "14px",
            "outline": "none",
            "paddingTop": "8px",
            "width": "100%",
          }
        }
      >
        Description
      </label>
      <textarea
        id="description"
        onChange={[Function]}
        style={
          Object {
            "background": "#000",
            "border": "none",
            "color": "#FFF",
            "fontSize": "18px",
            "height": 0,
            "lineHeight": "24px",
            "outline": "none",
            "padding": "0",
            "resize": "none",
          }
        }
        value="description"
      />
      <textarea
        aria-hidden={true}
        readOnly={true}
        style={
          Object {
            "background": "#000",
            "border": "none",
            "color": "#FFF",
            "fontSize": "18px",
            "height": 0,
            "left": 0,
            "lineHeight": "24px",
            "outline": "none",
            "overflow": "hidden",
            "padding": "0",
            "position": "absolute",
            "resize": "none",
            "top": 0,
            "visibility": "hidden",
          }
        }
        tabIndex={-1}
      />
      <div
        style={
          Object {
            "position": "absolute",
            "right": 0,
            "top": 2,
          }
        }
      >
        <label
          htmlFor="description"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          <div
            className="c2"
          >
            <svg
              style={
                Object {
                  "fill": "#FFF",
                  "height": "30px",
                  "width": "30px",
                }
              }
              viewBox="0 0 30 30"
            >
              <path
                d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                fillRule="evenodd"
              />
            </svg>
          </div>
        </label>
      </div>
    </div>
    <div
      className="c3"
      id="descriptionError"
    />
  </div>
  <div
    className="c1"
  >
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "maxWidth": "100%",
          "paddingBottom": "30px",
          "position": "relative",
        }
      }
    >
      <label
        htmlFor="sourceUrl"
        style={
          Object {
            "border": "none",
            "borderTop": "2px solid #2F2F36",
            "color": "#71737e",
            "display": "block",
            "fontSize": "14px",
            "outline": "none",
            "paddingTop": "8px",
            "width": "100%",
          }
        }
      >
        Source URL
      </label>
      <input
        id="sourceUrl"
        name="sourceUrl"
        onChange={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "border": "none",
            "color": "#FFF",
            "fontFamily": "inherit",
            "fontSize": "18px",
            "fontWeight": "inherit",
            "letterSpacing": "normal",
            "lineHeight": "24px",
            "maxWidth": "100%",
            "minWidth": 60,
            "outline": "none",
            "padding": 0,
          }
        }
        type="text"
      />
      <div
        style={
          Object {
            "position": "absolute",
            "right": 0,
            "top": 2,
          }
        }
      >
        <label
          htmlFor="sourceUrl"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          <div
            className="c2"
          >
            <svg
              style={
                Object {
                  "fill": "#FFF",
                  "height": "30px",
                  "width": "30px",
                }
              }
              viewBox="0 0 30 30"
            >
              <path
                d="M21.789 10.92a.724.724 0 000-1.022l-1.687-1.687a.724.724 0 00-1.022 0l-1.322 1.322 2.709 2.709 1.322-1.322zM9 18.291V21h2.709l7.992-7.992-2.709-2.71L9 18.292z"
                fillRule="evenodd"
              />
            </svg>
          </div>
        </label>
      </div>
    </div>
    <div
      className="c3"
      id="sourceUrlError"
    />
  </div>
  <div
    className="c1"
  >
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "maxWidth": "100%",
          "paddingBottom": "30px",
          "position": "relative",
        }
      }
    >
      <label
        htmlFor="author"
        style={
          Object {
            "border": "none",
            "borderTop": "2px solid #2F2F36",
            "color": "#71737e",
            "display": "block",
            "fontSize": "14px",
            "outline": "none",
            "paddingTop": "8px",
            "width": "100%",
          }
        }
      >
        Author
      </label>
      <input
        disabled={true}
        id="author"
        name="author"
        onChange={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "border": "none",
            "color": "#FFF",
            "fontFamily": "inherit",
            "fontSize": "18px",
            "fontWeight": "inherit",
            "letterSpacing": "normal",
            "lineHeight": "24px",
            "maxWidth": "100%",
            "minWidth": 60,
            "outline": "none",
            "padding": 0,
          }
        }
        type="text"
        value="author"
      />
      <div
        style={
          Object {
            "position": "absolute",
            "right": 0,
            "top": 2,
          }
        }
      >
        <label
          htmlFor="author"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        />
      </div>
    </div>
    <div
      className="c3"
      id="authorError"
    />
  </div>
  <div
    className="c1"
  >
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "maxWidth": "100%",
          "paddingBottom": "30px",
          "position": "relative",
        }
      }
    >
      <label
        htmlFor="created"
        style={
          Object {
            "border": "none",
            "borderTop": "2px solid #2F2F36",
            "color": "#71737e",
            "display": "block",
            "fontSize": "14px",
            "outline": "none",
            "paddingTop": "8px",
            "width": "100%",
          }
        }
      >
        Created
      </label>
      <input
        disabled={true}
        id="created"
        name="created"
        onChange={[Function]}
        style={
          Object {
            "backgroundColor": "transparent",
            "border": "none",
            "color": "#FFF",
            "fontFamily": "inherit",
            "fontSize": "18px",
            "fontWeight": "inherit",
            "letterSpacing": "normal",
            "lineHeight": "24px",
            "maxWidth": "100%",
            "minWidth": 60,
            "outline": "none",
            "padding": 0,
          }
        }
        type="text"
        value="27/05/2020"
      />
      <div
        style={
          Object {
            "position": "absolute",
            "right": 0,
            "top": 2,
          }
        }
      >
        <label
          htmlFor="created"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        />
      </div>
    </div>
    <div
      className="c3"
      id="createdError"
    />
  </div>
  <label
    style={
      Object {
        "border": "none",
        "borderTop": "2px solid #2F2F36",
        "color": "#71737e",
        "display": "block",
        "fontSize": "14px",
        "outline": "none",
        "paddingTop": "8px",
        "width": "100%",
      }
    }
  >
    Tags
  </label>
  <div
    className="c4"
  >
    <div
      className="c5"
    >
      <div
        className="c6"
        title="Colors"
      >
        <span
          className="c7"
        >
          Category: 
        </span>
        Colors
      </div>
      <div
        className=""
      >
        <div
          className=" css-2b097c-container"
          onKeyDown={[Function]}
        >
          <div
            className=" css-17k7d72-control"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className=" css-193kkzd-ValueContainer"
            >
              <div
                className=" css-1wa3eu0-placeholder"
              >
                Select...
              </div>
              <div
                className="css-14m14bb-Input"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    disabled={false}
                    id="react-select-2-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "label": "input",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className=" css-1hb7zxy-IndicatorsContainer"
            >
              <span
                className=" css-43ykx9-indicatorSeparator"
              />
              <div
                aria-hidden="true"
                className=" css-tlfecz-indicatorContainer"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                0
                /
                4
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c6"
        title="Countries"
      >
        <span
          className="c7"
        >
          Category: 
        </span>
        Countries
      </div>
      <div
        className=""
      >
        <div
          className=" css-2b097c-container"
          onKeyDown={[Function]}
        >
          <div
            className=" css-17k7d72-control"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className=" css-193kkzd-ValueContainer"
            >
              <div
                className=" css-1wa3eu0-placeholder"
              >
                Select...
              </div>
              <div
                className="css-14m14bb-Input"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    disabled={false}
                    id="react-select-3-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "label": "input",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className=" css-1hb7zxy-IndicatorsContainer"
            >
              <span
                className=" css-43ykx9-indicatorSeparator"
              />
              <div
                aria-hidden="true"
                className=" css-tlfecz-indicatorContainer"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                0
                /
                1
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <label
    style={
      Object {
        "border": "none",
        "borderTop": "2px solid #2F2F36",
        "color": "#71737e",
        "display": "block",
        "fontSize": "14px",
        "outline": "none",
        "paddingTop": "8px",
        "width": "100%",
      }
    }
  >
    Filters
  </label>
  <div
    style={
      Object {
        "border": "none",
        "borderTop": "1px solid #2F2F36",
        "display": "flex",
        "flexDirection": "column",
        "padding": "20px 20px 40px",
      }
    }
  >
    <div
      style={
        Object {
          "alignItems": "center",
          "borderBottom": "1px solid #2F2F36",
          "color": "#FFF",
          "display": "flex",
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "space-between",
        }
      }
    >
      <input
        aria-hidden={true}
        checked={false}
        id="checkbox-0"
        name="filters"
        onChange={[Function]}
        style={
          Object {
            "height": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "visibility": "hidden",
          }
        }
        type="checkbox"
        value={1}
      />
      <span
        style={
          Object {
            "overflow": "hidden",
            "textOverflow": "ellipsis",
            "whiteSpace": "nowrap",
          }
        }
      >
        <div
          className="c8"
          id="filterName-0"
          onClick={[Function]}
          title="Filter First Name"
        >
          Filter First Name
        </div>
      </span>
      <div
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 0,
          }
        }
      >
        <label
          htmlFor="checkbox-0"
          style={
            Object {
              "cursor": "pointer",
              "marginRight": 0,
            }
          }
        >
          <svg
            style={
              Object {
                "height": "30px",
                "stroke": "#FFF",
                "width": "30px",
              }
            }
            viewBox="0 0 30 30"
          >
            <path
              d="M7.5 7.5h15v15h-15z"
              fill="none"
            />
          </svg>
        </label>
      </div>
    </div>
    <div
      style={
        Object {
          "alignItems": "center",
          "borderBottom": "1px solid #2F2F36",
          "color": "#FFF",
          "display": "flex",
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "space-between",
        }
      }
    >
      <input
        aria-hidden={true}
        checked={false}
        id="checkbox-1"
        name="filters"
        onChange={[Function]}
        style={
          Object {
            "height": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "visibility": "hidden",
          }
        }
        type="checkbox"
        value={2}
      />
      <span
        style={
          Object {
            "overflow": "hidden",
            "textOverflow": "ellipsis",
            "whiteSpace": "nowrap",
          }
        }
      >
        <div
          className="c8"
          id="filterName-1"
          onClick={[Function]}
          title="Filter Last Name"
        >
          Filter Last Name
        </div>
      </span>
      <div
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 0,
          }
        }
      >
        <label
          htmlFor="checkbox-1"
          style={
            Object {
              "cursor": "pointer",
              "marginRight": 0,
            }
          }
        >
          <svg
            style={
              Object {
                "height": "30px",
                "stroke": "#FFF",
                "width": "30px",
              }
            }
            viewBox="0 0 30 30"
          >
            <path
              d="M7.5 7.5h15v15h-15z"
              fill="none"
            />
          </svg>
        </label>
      </div>
    </div>
    <div
      style={
        Object {
          "alignItems": "center",
          "borderBottom": "1px solid #2F2F36",
          "color": "#FFF",
          "display": "flex",
          "flexDirection": "row",
          "height": 48,
          "justifyContent": "space-between",
        }
      }
    >
      <input
        aria-hidden={true}
        checked={false}
        id="checkbox-2"
        name="filters"
        onChange={[Function]}
        style={
          Object {
            "height": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "visibility": "hidden",
          }
        }
        type="checkbox"
        value={3}
      />
      <span
        style={
          Object {
            "overflow": "hidden",
            "textOverflow": "ellipsis",
            "whiteSpace": "nowrap",
          }
        }
      >
        <div
          className="c8"
          id="filterName-2"
          onClick={[Function]}
          title="Filter Birthday"
        >
          Filter Birthday
        </div>
      </span>
      <div
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 0,
          }
        }
      >
        <label
          htmlFor="checkbox-2"
          style={
            Object {
              "cursor": "pointer",
              "marginRight": 0,
            }
          }
        >
          <svg
            style={
              Object {
                "height": "30px",
                "stroke": "#FFF",
                "width": "30px",
              }
            }
            viewBox="0 0 30 30"
          >
            <path
              d="M7.5 7.5h15v15h-15z"
              fill="none"
            />
          </svg>
        </label>
      </div>
    </div>
  </div>
  <div
    className="c9"
  >
    <div
      className="c10"
    >
      <div
        className="c11"
      >
        <div>
          <input
            checked={false}
            id="isPublic"
            onChange={[Function]}
            style={
              Object {
                "height": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "top": 0,
                "visibility": "hidden",
              }
            }
            type="checkbox"
          />
          <label
            htmlFor="isPublic"
          >
            <div
              style={
                Object {
                  "background": "#2F2F36",
                  "borderRadius": 20,
                  "boxSizing": "border-box",
                  "cursor": "pointer",
                  "height": 24,
                  "padding": 2,
                  "transition": "background 200ms ease-in-out",
                  "width": 44,
                }
              }
            >
              <div
                style={
                  Object {
                    "background": "#FFF",
                    "borderRadius": "50%",
                    "height": 20,
                    "transform": "translateX(0)",
                    "transition": "transform 200ms ease-in-out",
                    "width": 20,
                  }
                }
              />
            </div>
          </label>
        </div>
        <div
          className="c12"
        >
          <label
            className="c13"
            htmlFor="isPublic"
          >
            Make it Public
          </label>
          <span
            className="c14"
          >
            This State is currently Private
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;
