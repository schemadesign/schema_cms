# Generated by Django 2.2.10 on 2020-02-25 05:13

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import django_fsm
import schemacms.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0069_moving_datasources"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    state_operations = [
        migrations.CreateModel(
            name="DataSource",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=50, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("file", "file"), ("database", "database"), ("api", "api")], max_length=25
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        null=True,
                        upload_to=schemacms.utils.models.file_upload_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(allowed_extensions=["csv"])
                        ],
                    ),
                ),
            ],
            options={"ordering": ("-modified",)},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DataSourceJob",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "job_state",
                    django_fsm.FSMField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("failed", "Failed"),
                            ("success", "Success"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("source_file_path", models.CharField(editable=False, max_length=255)),
                ("source_file_version", models.CharField(editable=False, max_length=36)),
                (
                    "result",
                    models.FileField(
                        blank=True, null=True, upload_to=schemacms.utils.models.file_upload_path
                    ),
                ),
                ("error", models.TextField(blank=True, default="")),
                (
                    "datasource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="datasources.DataSource",
                    ),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="WranglingScript",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50)),
                ("is_predefined", models.BooleanField(default=True)),
                (
                    "file",
                    models.FileField(
                        null=True,
                        upload_to=schemacms.utils.models.file_upload_path,
                        validators=[django.core.validators.FileExtensionValidator(allowed_extensions=["py"])],
                    ),
                ),
                ("body", models.TextField(blank=True)),
                ("last_file_modification", models.DateTimeField(null=True)),
                (
                    "specs",
                    django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, editable=False),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scripts2",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "datasource",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scripts",
                        to="datasources.DataSource",
                    ),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
        ),
        migrations.CreateModel(
            name="Filter",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("range", "RANGE"),
                            ("value", "VALUE"),
                            ("bool", "BOOL"),
                            ("select", "SELECT"),
                            ("checkbox", "CHECKBOX"),
                        ],
                        max_length=25,
                    ),
                ),
                ("field", models.TextField()),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("datetime", "Date/Time"),
                            ("boolean", "Boolean"),
                            ("number", "Number"),
                        ],
                        max_length=25,
                    ),
                ),
                ("unique_items", models.IntegerField(null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "datasource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="filters",
                        to="datasources.DataSource",
                    ),
                ),
            ],
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DataSourceMeta",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("items", models.PositiveIntegerField(null=True)),
                ("fields", models.PositiveSmallIntegerField(null=True)),
                ("preview", models.FileField(null=True, upload_to=schemacms.utils.models.file_upload_path)),
                (
                    "fields_names",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, default=list, size=None
                    ),
                ),
                (
                    "fields_with_urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, default=list, size=None
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("failed", "Failed"),
                            ("success", "Success"),
                        ],
                        default="pending",
                        max_length=25,
                    ),
                ),
                ("error", models.TextField(blank=True, default="")),
                (
                    "datasource",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meta_data",
                        to="datasources.DataSource",
                    ),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
        ),
        migrations.CreateModel(
            name="DataSourceJobStep",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("body", models.TextField(blank=True)),
                ("exec_order", models.IntegerField(default=0)),
                ("options", django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                (
                    "datasource_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="datasources.DataSourceJob",
                    ),
                ),
                (
                    "script",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="steps",
                        to="datasources.WranglingScript",
                    ),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
        ),
        migrations.CreateModel(
            name="DataSourceJobMetaData",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("items", models.PositiveIntegerField(null=True)),
                ("fields", models.PositiveSmallIntegerField(null=True)),
                ("preview", models.FileField(null=True, upload_to=schemacms.utils.models.file_upload_path)),
                (
                    "fields_names",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, default=list, size=None
                    ),
                ),
                (
                    "fields_with_urls",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, default=list, size=None
                    ),
                ),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meta_data",
                        to="datasources.DataSourceJob",
                    ),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
        ),
        migrations.AddField(
            model_name="datasource",
            name="active_job",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="data_sources",
                to="datasources.DataSourceJob",
            ),
        ),
        migrations.AddField(
            model_name="datasource",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="data_sources",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="datasource",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="data_sources",
                to="projects.Project",
            ),
        ),
        migrations.AddConstraint(
            model_name="filter",
            constraint=models.UniqueConstraint(
                condition=models.Q(deleted_at=None),
                fields=("datasource", "name"),
                name="unique_datasource_filter",
            ),
        ),
        migrations.AddConstraint(
            model_name="datasource",
            constraint=models.UniqueConstraint(
                condition=models.Q(deleted_at=None),
                fields=("project", "name"),
                name="unique_project_datasource",
            ),
        ),
    ]

    operations = [migrations.SeparateDatabaseAndState(state_operations=state_operations)]
