# Generated by Django 2.2.8 on 2020-02-06 09:11

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import schemacms.utils.models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0062_state_active_tags'),
    ]

    operations = [
        migrations.AlterField(
            model_name='filter',
            name='filter_type',
            field=models.CharField(
                choices=[
                    ('range', 'RANGE'),
                    ('value', 'VALUE'),
                    ('bool', 'BOOL'),
                    ('select', 'SELECT'),
                    ('checkbox', 'CHECKBOX'),
                ],
                max_length=25,
            ),
        ),
        migrations.CreateModel(
            name='InStateFilter',
            fields=[
                (
                    'id',
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
                ),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('filter_type', models.CharField(max_length=25)),
                ('field', models.CharField(max_length=25)),
                ('field_type', models.CharField(max_length=25)),
                (
                    'condition_values',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), blank=True, default=list, size=None
                    ),
                ),
                (
                    'filter',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Filter'),
                ),
                (
                    'state',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.State'),
                ),
            ],
            options={'permissions': (('can_undelete', 'Can undelete this object'),), 'abstract': False},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.AddField(
            model_name='state',
            name='filters',
            field=models.ManyToManyField(through='projects.InStateFilter', to='projects.Filter'),
        ),
    ]
