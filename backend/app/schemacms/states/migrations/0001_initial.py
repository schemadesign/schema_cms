# Generated by Django 2.2.10 on 2020-02-24 17:05

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import schemacms.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("datasources", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("projects", "0069_moving_datasources"),
    ]

    operations = [
        migrations.CreateModel(
            name="InStateFilter",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("filter_type", models.CharField(max_length=25)),
                ("field", models.CharField(max_length=25)),
                ("field_type", models.CharField(max_length=25)),
                ("condition", django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                (
                    "filter",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="datasources.Filter"),
                ),
            ],
            options={"permissions": (("can_undelete", "Can undelete this object"),), "abstract": False},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="TagsList",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "datasource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="list_of_tags",
                        to="datasources.DataSource",
                    ),
                ),
            ],
            options={"ordering": ("created",)},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("value", models.CharField(max_length=150)),
                ("exec_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "tags_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="tags", to="states.TagsList"
                    ),
                ),
            ],
            options={"ordering": ("created",)},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID"),
                ),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, default="")),
                ("source_url", models.TextField(blank=True, default="")),
                ("is_public", models.BooleanField(default=True)),
                (
                    "active_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), default=list, null=True, size=None
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="states",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "datasource",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="states",
                        to="datasources.DataSource",
                    ),
                ),
                ("filters", models.ManyToManyField(through="states.InStateFilter", to="datasources.Filter")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="states",
                        to="projects.Project",
                    ),
                ),
            ],
            options={"ordering": ("created",)},
            bases=(schemacms.utils.models.MetaGeneratorMixin, models.Model),
        ),
        migrations.AddField(
            model_name="instatefilter",
            name="state",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="states.State"),
        ),
        migrations.AddConstraint(
            model_name="tagslist",
            constraint=models.UniqueConstraint(
                condition=models.Q(deleted_at=None),
                fields=("datasource", "name"),
                name="unique_tags_list_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="state",
            constraint=models.UniqueConstraint(
                condition=models.Q(deleted_at=None), fields=("project", "name"), name="unique_state_name"
            ),
        ),
    ]
